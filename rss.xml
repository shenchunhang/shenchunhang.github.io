<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title></title>
        <link>http://example.com</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Sun, 09 Jun 2024 16:32:21 +0000</pubDate>
        <lastBuildDate>Sun, 09 Jun 2024 16:32:21 +0000</lastBuildDate>
        <category>超频</category>
        <category>硬件</category>
        <category>Intel</category>
        <category>i5-12400</category>
        <category>diy</category>
        <category>pc</category>
        <category>Docker</category>
        <category>Redis</category>
        <category>Windows</category>
        <category>安装教程</category>
        <category>hexo</category>
        <category>Shoka</category>
        <category>ShokaX</category>
        <category>mysql</category>
        <category>java</category>
        <category>定位</category>
        <category>struts2</category>
        <category>JVM</category>
        <category>源码</category>
        <category>websocket</category>
        <category>依赖升级</category>
        <category>安全漏洞</category>
        <category>性能优化</category>
        <category>垃圾回收</category>
        <category>工具</category>
        <category>github</category>
        <category>日常</category>
        <category>动漫</category>
        <item>
            <guid isPermalink="true">http://example.com/2024/06/09/12400-OC/</guid>
            <title>Intel i5-12400 超频指南</title>
            <link>http://example.com/2024/06/09/12400-OC/</link>
            <category>超频</category>
            <category>硬件</category>
            <category>Intel</category>
            <category>i5-12400</category>
            <pubDate>Sun, 09 Jun 2024 16:32:21 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;最近电商 618 活动，12600KF 价格非常诱人，叠加优惠券只需 820 元。虽然很想入手，但考虑到我使用双屏且不喜欢关机，还是决定保留核显以降低待机功耗。因此，我们今天来探讨如何将 i5-12400 超频到接近 12600K 的性能水平。&lt;/p&gt;

&lt;h2 id=&#34;系统配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#系统配置&#34;&gt;#&lt;/a&gt; 系统配置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;操作系统: Windows 11 专业版 64 位 (版本 22631.3737, 23H2)&lt;/li&gt;
&lt;li&gt;处理器: Intel Core i5-12400 (6 核 12 线程，Intel 7 工艺)&lt;/li&gt;
&lt;li&gt;显卡:
&lt;ul&gt;
&lt;li&gt;集成显卡: Intel UHD Graphics 730&lt;/li&gt;
&lt;li&gt;独立显卡: NVIDIA GeForce RTX 2080 Ti (11GB GDDR6)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;主板: MSI MAG B660M MORTAR MAX WIFI DDR4 (MS-7D97)&lt;/li&gt;
&lt;li&gt;存储:
&lt;ul&gt;
&lt;li&gt;SAMSUNG MZVL2512HCJQ-00B00 SSD (477GB)&lt;/li&gt;
&lt;li&gt;ZHITAI TiPlus5000 1TB SSD (954GB)&lt;/li&gt;
&lt;li&gt;Seagate ST4000VX015-3CU104 HDD (3.64TB)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;显示器: 27 英寸，2560x1600 分辨率，120Hz 刷新率&lt;/li&gt;
&lt;li&gt;内存: 32GB (4x8GB) Tanbassh DDR4-3603 (实际运行于 3834MHz, 时序 17-20-20-40 2T)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;超频准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#超频准备&#34;&gt;#&lt;/a&gt; 超频准备&lt;/h2&gt;
&lt;h3 id=&#34;主板要求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主板要求&#34;&gt;#&lt;/a&gt; 主板要求&lt;/h3&gt;
&lt;p&gt;由于我们将通过提升外频来增加 CPU 主频，因此主板必须支持外频调整。本指南基于微星 (MSI) 主板 BIOS 进行，请确保您的主板具有类似功能。&lt;/p&gt;

&lt;h2 id=&#34;超频步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#超频步骤&#34;&gt;#&lt;/a&gt; 超频步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进入 BIOS, 将 CPU 频率调整至目标值 (本例中为 5000MHz)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调整 P-CORE 倍频 (通常默认为 40)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &amp;quot;Advanced CPU Configuration&amp;quot; 中:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;禁用 Intel C-State&lt;/li&gt;
&lt;li&gt;禁用 Intel Speed Shift Technology&lt;/li&gt;
&lt;li&gt;根据散热器选择合适的功耗墙设置 (建议选择水冷)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;将 &amp;quot;Microcode Selection&amp;quot; 设置为 &amp;quot;Non K OC&amp;quot;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 CPU 基频从 100MHz 提升至 125MHz (提升 25%)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;降低 Ring 倍频至 33, 使 Ring 频率约为 4125MHz (通常保持在主频 - 1GHz 左右)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调整 GT 倍频 (核显), 使其频率与原始设置相近，本例中设为 23。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &amp;quot;CPU Cooler Tuning&amp;quot; 中选择水冷，以最大化功耗限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &amp;quot;数位电压设置&amp;quot; 中:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 CPU 负载线校准 (LLC) 设置为 Mode 3 或 Mode 4&lt;/li&gt;
&lt;li&gt;初始 CPU Core 电压设置为 1.2V&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;
&lt;p&gt;手动调整内存设置，恢复至原始参数 (通常为 DDR4-3200 CL18)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保存设置并进入系统，使用 CPU-Z 验证更改是否生效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;ol start=&#34;12&#34;&gt;
&lt;li&gt;
&lt;p&gt;进行稳定性测试:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先运行 Cinebench R23 (中等压力测试)&lt;/li&gt;
&lt;li&gt;如遇蓝屏，逐步增加 CPU 电压 (每次 + 0.02V) 直至稳定&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 Cinebench R23 后，运行 Cinebench R15 (高压力测试):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;蓝屏时增加电压 (每次 + 0.01V)&lt;/li&gt;
&lt;li&gt;稳定后尝试降低电压 (每次 - 0.01V), 直到找到最低稳定电压&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确定最低稳定电压后，建议额外增加 0.03-0.04V 作为安全裕度，以确保长期稳定性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;性能提升&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#性能提升&#34;&gt;#&lt;/a&gt; 性能提升&lt;/h2&gt;
&lt;p&gt;// TODO: 添加超频前后的性能对比数据&lt;/p&gt;

&lt;h2 id=&#34;注意事项&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注意事项&#34;&gt;#&lt;/a&gt; 注意事项&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;超频可能会导致处理器寿命缩短，请谨慎操作。&lt;/li&gt;
&lt;li&gt;确保有足够的散热能力，建议使用高质量散热器。&lt;/li&gt;
&lt;li&gt;超频可能会影响系统稳定性，请进行充分的稳定性测试。&lt;/li&gt;
&lt;li&gt;不同的 CPU 样品可能有不同的超频潜力，您的结果可能与本指南有所不同。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;结语&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结语&#34;&gt;#&lt;/a&gt; 结语&lt;/h2&gt;
&lt;p&gt;通过适当的超频，我们可以将 i5-12400 的性能提升到接近 12600K 的水平，同时保留了核显的优势。希望本指南能够帮助您充分发挥处理器的潜力。如有任何问题，欢迎在评论区讨论。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/05/15/hexo-Shoka%E5%8D%87%E7%BA%A7%E5%88%B0ShokaX/</guid>
            <title>[hexo] Shoka升级到ShokaX</title>
            <link>http://example.com/2024/05/15/hexo-Shoka%E5%8D%87%E7%BA%A7%E5%88%B0ShokaX/</link>
            <category>hexo</category>
            <category>Shoka</category>
            <category>ShokaX</category>
            <pubDate>Wed, 15 May 2024 14:48:12 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;shoka升级&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shoka升级&#34;&gt;#&lt;/a&gt; Shoka 升级&lt;/h2&gt;
&lt;p&gt;玩 blog 开始就用的 Shoka, 一直都没管主题，今天偶然发现别人的 Shoka 和我的长得有点区别，看页脚，ShokaX, 诶诶，居然有 ShokaX,&lt;br&gt;
 随后检索，发现原来 Shoka 已经停更了三年了&lt;br&gt;
看了一下 ShokaX, 感觉优化了不少东西，直接升呗&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
npm -g install shokax-cli
SXC install shokaX -pm npm&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;sxec-102-critical-rendering-plugins-are-missing-or-incorrectly-configured&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sxec-102-critical-rendering-plugins-are-missing-or-incorrectly-configured&#34;&gt;#&lt;/a&gt; [SXEC 102] Critical rendering plugins are missing or incorrectly configured.&lt;/h3&gt;
&lt;p&gt;此代码代表包安装不完整，关键插件未安装，可能导致显示错误和性能下降等问题。&lt;br&gt;
重新执行一下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SXC install shokaX&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;sxec-201-essential-informationtitle-desc-lang-etc-config-incorrectly-page-will-render-incorrectly&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sxec-201-essential-informationtitle-desc-lang-etc-config-incorrectly-page-will-render-incorrectly&#34;&gt;#&lt;/a&gt; [SXEC 201] Essential information(title, desc, lang, etc) config incorrectly, Page will render incorrectly&lt;/h3&gt;
&lt;p&gt;Hexo 配置中的关键信息缺失，包括站点标题、站点描述、站点语言、站点时区和站点 URL。&lt;/p&gt;
&lt;h3 id=&#34;代码块样式也变了&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码块样式也变了&#34;&gt;#&lt;/a&gt; 代码块样式也变了&lt;/h3&gt;
&lt;p&gt;看了一下官方，原来大家都遇到过这个问题&lt;br&gt;
&lt;a href=&#34;https://github.com/theme-shoka-x/hexo-theme-shokaX/discussions/243&#34;&gt; https://github.com/theme-shoka-x/hexo-theme-shokaX/discussions/243&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;github的deploy报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#github的deploy报错&#34;&gt;#&lt;/a&gt; github 的 deploy 报错&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;  hexo clean
  hexo generate
  shell: /usr/bin/bash -e &amp;#123;0&amp;#125;
INFO  Validating config
INFO  Validating config
INFO  Start processing
Prism&#39;s Diff Highlight plugin requires the Diff language definition (prism-diff.js).Make sure the language definition is loaded or use Prism&#39;s Autoloader plugin.
WARN  The the WebP converter can not run correctly when you run hexo g after hexo cl, please run the hexo g again
INFO  Files loaded in 1.46 s
node:internal/deps/undici/undici:12502
      Error.captureStackTrace(err, this);
            ^

TypeError: fetch failed
    at node:internal/deps/undici/undici:12502:13
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) &amp;#123;
  [cause]: AggregateError [ETIMEDOUT]: 
      at internalConnectMultiple (node:net:1117:18)
      at internalConnectMultiple (node:net:1185:5)
      at Timeout.internalConnectMultipleTimeout (node:net:1711:5)
      at listOnTimeout (node:internal/timers:575:11)
      at process.processTimers (node:internal/timers:514:7) &amp;#123;
    code: &#39;ETIMEDOUT&#39;,
    [errors]: [
      Error: connect ETIMEDOUT 116.253.29.204:443
          at createConnectionError (node:net:1647:14)
          at Timeout.internalConnectMultipleTimeout (node:net:1706:38)
          at listOnTimeout (node:internal/timers:575:11)
          at process.processTimers (node:internal/timers:514:7) &amp;#123;
        errno: -110,
        code: &#39;ETIMEDOUT&#39;,
        syscall: &#39;connect&#39;,
        address: &#39;116.253.29.204&#39;,
        port: 443
      &amp;#125;,
      Error: connect ENETUNREACH 2409:8c34:2220:b:3::3fb:443 - Local (:::0)
          at internalConnectMultiple (node:net:1181:16)
          at Timeout.internalConnectMultipleTimeout (node:net:1711:5)
          at listOnTimeout (node:internal/timers:575:11)
          at process.processTimers (node:internal/timers:514:7) &amp;#123;
        errno: -101,
        code: &#39;ENETUNREACH&#39;,
        syscall: &#39;connect&#39;,
        address: &#39;2409:8c34:2220:b:3::3fb&#39;,
        port: 443
      &amp;#125;
    ]
  &amp;#125;
&amp;#125;

Node.js v20.13.1
Error: Process completed with exit code 1.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;虽然不懂 nodejs, 但是看日志报错，是连接失败，推断是代理，github 用的是 node 默认的镜像源&lt;br&gt;
本地的镜像源: &lt;a href=&#34;https://registry.npmmirror.com&#34;&gt;https://registry.npmmirror.com&lt;/a&gt; (我挂了代理)&lt;br&gt;
 github 默认: &lt;a href=&#34;https://registry.npmjs.org/&#34;&gt;https://registry.npmjs.org/&lt;/a&gt;&lt;br&gt;
 所以直接在报错的命令那里加了一个切换镜像源的命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    - name: 切换代理
      run: |
        npm config get registry
        npm config set registry http://registry.npm.taobao.com

    - name: 生成静态文件
      run: |
        hexo clean
        hexo generate
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;大标题失效alternate&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#大标题失效alternate&#34;&gt;#&lt;/a&gt; 大标题失效 alternate&lt;/h3&gt;
&lt;p&gt;_config.shokaX.yml 中 alternate 失效&lt;br&gt;
本地可以，但是 github 上却还是显示为&lt;/p&gt;

&lt;p&gt;可能是你的主题配置文件名称的问题&lt;br&gt;
_config.shokaX.yml 改为_config.shokax.yml&lt;br&gt;
 本地是 windows, 而服务器是 linux&lt;/p&gt;
&lt;h2 id=&#34;体验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#体验&#34;&gt;#&lt;/a&gt; 体验&lt;/h2&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/22/websocket%E4%B8%89%E6%96%B9%E5%BC%80%E6%BA%90%E4%BB%B6%E5%8D%87%E7%BA%A7/</guid>
            <title>websocket三方开源件升级经验分享</title>
            <link>http://example.com/2024/04/22/websocket%E4%B8%89%E6%96%B9%E5%BC%80%E6%BA%90%E4%BB%B6%E5%8D%87%E7%BA%A7/</link>
            <category>java</category>
            <category>源码</category>
            <category>websocket</category>
            <category>依赖升级</category>
            <category>安全漏洞</category>
            <pubDate>Mon, 22 Apr 2024 13:28:34 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;背景介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景介绍&#34;&gt;#&lt;/a&gt; 背景介绍&lt;/h2&gt;
&lt;p&gt;在一个项目中，我们使用了其他同事提供的 websocket 代码。项目接近测试结束阶段时，我对代码进行了审查，发现 IDE 提示当前使用的 websocket 版本存在 CVE 漏洞。起初认为这可能只是一个小问题，只需要简单地升级版本就能解决。然而，事实证明这个过程比预想的要复杂得多。&lt;/p&gt;
&lt;h2 id=&#34;使用的开源组件orgjava-websocket&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用的开源组件orgjava-websocket&#34;&gt;#&lt;/a&gt; 使用的开源组件：org.java-websocket&lt;/h2&gt;
&lt;p&gt;原始依赖版本是 1.3.0：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org.java-websocket&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Java-WebSocket&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1.3.0&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;升级过程中遇到的主要问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#升级过程中遇到的主要问题&#34;&gt;#&lt;/a&gt; 升级过程中遇到的主要问题&lt;/h2&gt;
&lt;p&gt;当我尝试将版本直接升级到最新的 1.5.6 时，遇到了两个主要问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;API 发生变化&lt;/li&gt;
&lt;li&gt;信任所有证书的方法报错&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;1-api变化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-api变化&#34;&gt;#&lt;/a&gt; 1. API 变化&lt;/h3&gt;
&lt;p&gt;升级前后的代码对比：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 升级前&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt; client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uri&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Draft_76&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt; sc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;TLS&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;kmf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getKeyManagers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; tmf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTrustManagers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setWebSocketFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultSSLWebSocketServerFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sc&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 升级后&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt; client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uri&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Draft_6455&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt; sc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;TLS&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; trustAllCerts&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;security&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;SecureRandom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setSocketFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSocketFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;主要变化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setWebSocketFactory()&lt;/code&gt;  方法变为  &lt;code&gt;setSocketFactory()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Draft_76&lt;/code&gt;  更新为  &lt;code&gt;Draft_6455&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过查看 GitHub 上的官方示例和 git 记录，我发现 API 经历了以下变化：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;chatclient.setWebSocketFactory(new SSLWebSocketClientFactory(sslContext));&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chatclient.setSocket(factory.createSocket());&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chatclient.setSocketFactory(factory);&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-信任所有证书报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-信任所有证书报错&#34;&gt;#&lt;/a&gt; 2. 信任所有证书报错&lt;/h3&gt;
&lt;p&gt;升级后，日志中出现了证书校验的报错。通过源码分析，发现问题出在 &lt;code&gt;chooseTrustManager&lt;/code&gt;  方法：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;X509TrustManager&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;chooseTrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;TrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; tm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 代码省略...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AbstractTrustManagerWrapper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509TrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;tm&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个方法返回的 &lt;code&gt;AbstractTrustManagerWrapper&lt;/code&gt;  包含了证书校验逻辑，而不是使用我们自定义的 &lt;code&gt;X509TrustManager&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h2&gt;
&lt;p&gt;为了解决这个问题，我们需要实现 &lt;code&gt;X509ExtendedTrustManager&lt;/code&gt;  接口。以下是修改后的代码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;generateWebsocketClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; uri&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URISyntaxException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt; client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uri&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Draft_6455&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;TrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; trustAllCerts &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;X509ExtendedTrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkClientTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkServerTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getAcceptedIssuers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkClientTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Socket&lt;/span&gt; socket&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkServerTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Socket&lt;/span&gt; socket&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkClientTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSLEngine&lt;/span&gt; engine&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkServerTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSLEngine&lt;/span&gt; engine&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt; sc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;SSL&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        sc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; trustAllCerts&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;security&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;SecureRandom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setSocketFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSocketFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;NoSuchAlgorithmException&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;KeyManagementException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; connected &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        connected &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;connectBlocking&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;InterruptedException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;connectBlocking fail&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;connected&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;升级第三方依赖时，要仔细查看更新日志和 API 变化。&lt;/li&gt;
&lt;li&gt;对于安全相关的更改，如 SSL/TLS 配置，需要特别注意。&lt;/li&gt;
&lt;li&gt;在升级过程中，逐步测试每个变更是很重要的。&lt;/li&gt;
&lt;li&gt;保持与开源社区的最新动态同步，可以帮助我们更好地理解和应对 API 变化。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/21/max-http-header-size%E5%BC%95%E8%B5%B7%E7%9A%84OOM/</guid>
            <title>max-http-header-size引起的OOM</title>
            <link>http://example.com/2024/04/21/max-http-header-size%E5%BC%95%E8%B5%B7%E7%9A%84OOM/</link>
            <category>java</category>
            <category>定位</category>
            <pubDate>Sun, 21 Apr 2024 15:13:22 +0000</pubDate>
            <description><![CDATA[  ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/04/18/websocketClient%E8%AE%B0%E5%BE%97close/</guid>
            <title>websocketClient记得close</title>
            <link>http://example.com/2024/04/18/websocketClient%E8%AE%B0%E5%BE%97close/</link>
            <category>java</category>
            <category>定位</category>
            <category>JVM</category>
            <pubDate>Thu, 18 Apr 2024 14:30:58 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;最近开发了一个特性，关于 websocket 的功能，代码量直接给感到了 5k, 联调都好了，程序就挂在服务器上，然后就没管了，今天发现这个服务器，卡卡的，一看 CPU 占用 500%, 惊了&lt;/p&gt;
&lt;h2 id=&#34;定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位&#34;&gt;#&lt;/a&gt; 定位&lt;/h2&gt;
&lt;h3 id=&#34;先看哪个线程这么吃cpu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先看哪个线程这么吃cpu&#34;&gt;#&lt;/a&gt; 先看哪个线程这么吃 CPU&lt;/h3&gt;
&lt;p&gt;top -Hp pid, 这个是查看线程，直接 top 显示的都是进程&lt;br&gt;
然后取 CPU 占用最高的一个，printf “% x\n” 线程号，&lt;br&gt;
 再用 jstack pid &amp;gt; stack.txt&lt;br&gt;
 在 stack.txt 里面检索一下，发现是 GC 的线程，看了 CPU 占用最高的几个线程，都是 GC 的，然后突然发现端倪，为什么 Thread-XXX 的线程这么多呢，有几千个，看栈帧，看线程名，只能知道是系统龙出来的，但是我自己弄的线程都是有给命名的，感觉很奇怪&lt;/p&gt;
&lt;h3 id=&#34;先看gc情况-判断是一直在gc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先看gc情况-判断是一直在gc&#34;&gt;#&lt;/a&gt; 先看 GC 情况，判断是一直在 GC&lt;/h3&gt;
&lt;p&gt;用 jstat -gcutil pid 1000 10, 发现 FGC 很少，但是 YGC 却来得很多，还一直再增长，这种情况，没有 FGC, 一直 YGC, 那多半，并没有大对象，如果是大对象就直接进老年代，触发 FGC 了&lt;/p&gt;
&lt;h3 id=&#34;查看heapdump&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看heapdump&#34;&gt;#&lt;/a&gt; 查看 heapdump&lt;/h3&gt;
&lt;p&gt;本来准备先 jmap -heap pid 的，结果上传到服务器的 jdk 和 jre 版本不支持，索性直接 jmap -dump:format=b,file=home/xxx/pid.dump, 推荐用 mat（Memory Analyzer Tool）, visualvm, 还是太简陋了，不容易分析，大概看了一遍，没有自己封装的对象在，&lt;br&gt;
 然后我又检索了一下 websocket 的类名，发现 2000 多个，哦和，问题肯定出现在 new WebscoketClient 的地方，走读了一下代码，发现连接不通的时候没有 close, 导致 GC 一直不把他当成垃圾&lt;/p&gt;
&lt;h3 id=&#34;源码解析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#源码解析&#34;&gt;#&lt;/a&gt; 源码解析&lt;/h3&gt;
&lt;p&gt;WebSocketClient 中有两个线程对象，&lt;br&gt;
private Thread writeThread;&lt;br&gt;
private Thread connectReadThread;&lt;br&gt;
 所以现象中有线程数爆炸，且命名也是系统给的，让人混淆&lt;br&gt;
再说为什么会有这么多自定义的 WebSocketClient 对象，因为代码终有重连机制&lt;br&gt;
改正也简单，加上 连接失败，机上 close 就可以了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
public abstract class WebSocketClient extends AbstractWebSocket implements Runnable, WebSocket {

&amp;#x2F;**
* The URI this channel is supposed to connect to.
*&amp;#x2F;
protected URI uri &amp;#x3D; null;

&amp;#x2F;**
* The underlying engine
*&amp;#x2F;
private WebSocketImpl engine &amp;#x3D; null;

&amp;#x2F;**
* The socket for this WebSocketClient
*&amp;#x2F;
private Socket socket &amp;#x3D; null;

&amp;#x2F;**
* The SocketFactory for this WebSocketClient
*
* @since 1.4.0
*&amp;#x2F;
private SocketFactory socketFactory &amp;#x3D; null;

&amp;#x2F;**
* The used OutputStream
*&amp;#x2F;
private OutputStream ostream;

&amp;#x2F;**
* The used proxy, if any
*&amp;#x2F;
private Proxy proxy &amp;#x3D; Proxy.NO_PROXY;

&amp;#x2F;**
* The thread to write outgoing message
*&amp;#x2F;
private Thread writeThread;

&amp;#x2F;**
* The thread to connect and read message
*&amp;#x2F;
private Thread connectReadThread;

&amp;#x2F;**
* The draft to use
*&amp;#x2F;
private Draft draft;

&amp;#x2F;**
* The additional headers to use
*&amp;#x2F;
private Map&amp;lt;String, String&amp;gt; headers;

&amp;#x2F;**
* The latch for connectBlocking()
*&amp;#x2F;
private CountDownLatch connectLatch &amp;#x3D; new CountDownLatch(1);

&amp;#x2F;**
* The latch for closeBlocking()
*&amp;#x2F;
private CountDownLatch closeLatch &amp;#x3D; new CountDownLatch(1);

&amp;#x2F;**
* The socket timeout value to be used in milliseconds.
*&amp;#x2F;
private int connectTimeout &amp;#x3D; 0;

&amp;#x2F;**
* DNS resolver that translates a URI to an InetAddress
*
* @see InetAddress
* @since 1.4.1
*&amp;#x2F;
private DnsResolver dnsResolver &amp;#x3D; null;&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/</guid>
            <title>struts2集合参数-只能接收256个</title>
            <link>http://example.com/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/</link>
            <category>java</category>
            <category>定位</category>
            <category>struts2</category>
            <pubDate>Fri, 22 Mar 2024 13:47:32 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;测试那边转过来一个问题单，开发这边初步定位是 struts 框架接收集合参数只能接收到 256 个&lt;/p&gt;
&lt;h2 id=&#34;定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位&#34;&gt;#&lt;/a&gt; 定位&lt;/h2&gt;
&lt;h3 id=&#34;google一下&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#google一下&#34;&gt;#&lt;/a&gt; google 一下&lt;/h3&gt;
&lt;p&gt;先直接 google 了一下，感觉回答有点偏，说是 struts2.5.15 升级到 2.5.30 就会有这个问题，是 struts 改用 ArrayList 的 TypeConverter, 我自己去代码里面看根本咩有限制&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
public Object convertValue(Map&amp;lt;String, Object&amp;gt; context, Object target, Member member, String propertyName, Object value, Class toType) {
Collection result;
Class memberType &amp;#x3D; String.class;
    if (target !&amp;#x3D; null) {
        memberType &amp;#x3D; objectTypeDeterminer.getElementClass(target.getClass(), propertyName, null);
        if (memberType &amp;#x3D;&amp;#x3D; null) {
            memberType &amp;#x3D; String.class;
        }
    }
    if (toType.isAssignableFrom(value.getClass())) {
        &amp;#x2F;&amp;#x2F; no need to do anything
        result &amp;#x3D; (Collection) value;
    } else if (value.getClass().isArray()) {
        Object[] objArray &amp;#x3D; (Object[]) value;
        TypeConverter converter &amp;#x3D; getTypeConverter(context);
        result &amp;#x3D; createCollection(toType, memberType, objArray.length);
        for (Object anObjArray : objArray) {
            Object convertedValue &amp;#x3D; converter.convertValue(context, target, member, propertyName, anObjArray, memberType);
            if (!TypeConverter.NO_CONVERSION_POSSIBLE.equals(convertedValue)) {
                result.add(convertedValue);
            }
        }
    } else if (Collection.class.isAssignableFrom(value.getClass())) {
        Collection col &amp;#x3D; (Collection) value;
        TypeConverter converter &amp;#x3D; getTypeConverter(context);
        result &amp;#x3D; createCollection(toType, memberType, col.size());
        for (Object aCol : col) {
            Object convertedValue &amp;#x3D; converter.convertValue(context, target, member, propertyName, aCol, memberType);
            if (!TypeConverter.NO_CONVERSION_POSSIBLE.equals(convertedValue)) {
                result.add(convertedValue);
            }
        }
    } else {
        result &amp;#x3D; createCollection(toType, memberType, -1);
        TypeConverter converter &amp;#x3D; getTypeConverter(context);
        Object convertedValue &amp;#x3D; converter.convertValue(context, target, member, propertyName, value, memberType);
        if (!TypeConverter.NO_CONVERSION_POSSIBLE.equals(convertedValue)) {
            result.add(convertedValue);
        }
    }
    return result;
}&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;strutsognlexpressionmaxlength&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strutsognlexpressionmaxlength&#34;&gt;#&lt;/a&gt; struts.ognl.expressionMaxLength&lt;/h4&gt;
&lt;p&gt;这时候就这专门去 clone 了一下 struts 的仓库&lt;br&gt;
先切换到 2.5.33 版本，然后曲剧检索了一下 256, 还真让找到了一处配置&lt;/p&gt;
&lt;img loading=&#34;lazy&#34; data-src=&#34;/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/Snipaste_2024-04-22_22-01-35.png&#34; class=&#34;&#34; title=&#34;struts.ognl.expressionMaxLength&#34;&gt;
&lt;p&gt;但是被注释掉了，翻译过来，不配置的话，就不会被限制，实际情况，本来就没有设置这个参数，应该和在这个配置没有关系，而且实际给的参数列表超过了 256, 这个参数是接收 OGNL 的个数，我们出现的问题是 OGNL 集合参数被限制在 256 以内，&lt;/p&gt;
&lt;h4 id=&#34;strutsognlautogrowthcollectionlimit&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strutsognlautogrowthcollectionlimit&#34;&gt;#&lt;/a&gt; struts.ognl.autoGrowthCollectionLimit&lt;/h4&gt;
&lt;p&gt;无奈，只得继续看提交记录，好在提交记录 并不是很多，看着看着，又发现了一处&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
public Object getProperty(Map context, Object target, Object name) throws OgnlException {
    if (ReflectionContextState.isGettingByKeyProperty(context)
            || name.equals(XWorkCollectionPropertyAccessor.KEY_PROPERTY_FOR_CREATION)) {
        return _sAcc.getProperty(context, target, name);
    } else if (name instanceof String) {
        return super.getProperty(context, target, name);
    }
    ReflectionContextState.updateCurrentPropertyPath(context, name);
    Class lastClass &amp;#x3D; (Class) context.get(XWorkConverter.LAST_BEAN_CLASS_ACCESSED);
    String lastProperty &amp;#x3D; (String) context.get(XWorkConverter.LAST_BEAN_PROPERTY_ACCESSED);
    
    if (name instanceof Number
            &amp;amp;&amp;amp; ReflectionContextState.isCreatingNullObjects(context)
            &amp;amp;&amp;amp; objectTypeDeterminer.shouldCreateIfNew(lastClass,lastProperty,target,null,true)) {

        List list &amp;#x3D; (List) target;
        int index &amp;#x3D; ((Number) name).intValue();
        int listSize &amp;#x3D; list.size();

        if (lastClass &amp;#x3D;&amp;#x3D; null || lastProperty &amp;#x3D;&amp;#x3D; null) {
            return super.getProperty(context, target, name);
        }
        Class beanClass &amp;#x3D; objectTypeDeterminer.getElementClass(lastClass, lastProperty, name);
        if (listSize &amp;lt;&amp;#x3D; index) {
            Object result;
            if (index &amp;gt; autoGrowCollectionLimit) {
                throw new OgnlException(&amp;quot;Error auto growing collection size to &amp;quot; + index + &amp;quot; which limited to &amp;quot;
                                        + autoGrowCollectionLimit);
            }
            for (int i &amp;#x3D; listSize; i &amp;lt; index; i++) {
                list.add(null);
            }
            try {
                list.add(index, result &amp;#x3D; objectFactory.buildBean(beanClass, context));
            } catch (Exception exc) {
                throw new XWorkException(exc);
            }
            return result;
        } else if (list.get(index) &amp;#x3D;&amp;#x3D; null) {
            Object result;
            try {
                list.set(index, result &amp;#x3D; objectFactory.buildBean(beanClass, context));
            } catch (Exception exc) {
                throw new XWorkException(exc);
            }
            return result;
        }
    }
    return super.getProperty(context, target, name);
}&lt;/code&gt;&lt;/pre&gt;
&lt;img loading=&#34;lazy&#34; data-src=&#34;/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/Snipaste_2024-04-22_22-28-18.png&#34; class=&#34;&#34; title=&#34;struts.ognl.autoGrowthCollectionLimit&#34;&gt;
&lt;p&gt;早知道就一起检索 255 了，还看了这么多提交记录，这次直接到 struts 的配置里面加上，测试了一下，果然可以&lt;/p&gt;
&lt;h4 id=&#34;吐槽&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#吐槽&#34;&gt;#&lt;/a&gt; 吐槽&lt;/h4&gt;
&lt;p&gt;struts 真的可以，增加了 default 配置，也不写到版本更新里面去，还得自己来看源码才能知道&lt;/p&gt;
&lt;h4 id=&#34;推想&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#推想&#34;&gt;#&lt;/a&gt; 推想&lt;/h4&gt;
&lt;p&gt;struts.ognl.expressionMaxLength 这个配置，看了一下他们的 issue, 还是感觉挺好笑的，2.5.21 加上后，2.5.22 又给注释掉，实际外发的版本 2.5.21 都没了，&lt;br&gt;
&lt;a href=&#34;https://github.com/apache/struts/pull/380&#34;&gt;struts.ognl.expressionMaxLength 讨论&lt;/a&gt;&lt;/p&gt;
&lt;img loading=&#34;lazy&#34; data-src=&#34;/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/Snipaste_2024-04-22_22-44-21.png&#34; class=&#34;&#34; title=&#34;2.5.21缺失&#34;&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/09/15/oom-help/</guid>
            <title>快速定位OOM问题</title>
            <link>http://example.com/2023/09/15/oom-help/</link>
            <category>java</category>
            <category>定位</category>
            <pubDate>Fri, 15 Sep 2023 13:38:44 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;oom的原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#oom的原因&#34;&gt;#&lt;/a&gt; OOM 的原因&lt;/h2&gt;
&lt;h3 id=&#34;申请了大量的对象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#申请了大量的对象&#34;&gt;#&lt;/a&gt; 申请了大量的对象&lt;/h3&gt;
&lt;p&gt;写查询语句，不加 limit, 直接查到全表了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;select&amp;gt;
    select id, name, .... from user
    &amp;lt;where&amp;gt;
        &amp;lt;if test&amp;#x3D;&amp;#39;name !&amp;#x3D;null &amp;amp;&amp;amp; name!&amp;#x3D;&amp;#39;&amp;#39;&amp;#39;&amp;gt;
            name &amp;#x3D; #{name}
        &amp;lt;&amp;#x2F;if&amp;gt;
    &amp;lt;&amp;#x2F;where&amp;gt;
&amp;lt;&amp;#x2F;select&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当 name 等于 null 或者空字符串时，直接变成了查全表，有条军规就是查询必加 limit&lt;/p&gt;
&lt;h3 id=&#34;内存用尽-资源不释放&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存用尽-资源不释放&#34;&gt;#&lt;/a&gt; 内存用尽，资源不释放&lt;/h3&gt;
&lt;p&gt;Map 一直存，不做容量控制。定时任务最常见，要么是忘了 clear (), 要么就是没有设置 lru 之类的淘汰算法.&lt;br&gt;
 还有就是 IO 对象不释放，记得调用 close () 呀&lt;br&gt;
文件的话，记得调用 close (), 或者用 try-resource 语法糖&lt;br&gt;
如果是连接对象的话，可以用连接池，保证下限&lt;/p&gt;
&lt;h3 id=&#34;服务器内存真的低&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务器内存真的低&#34;&gt;#&lt;/a&gt; 服务器内存真的低&lt;/h3&gt;
&lt;p&gt;我们的开发环境，单台只给了 16G, 感觉数据多一点，就卡的不行&lt;br&gt;
可以用命令看下当前 堆的状态&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
jmap -heap&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;定位方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位方法&#34;&gt;#&lt;/a&gt; 定位方法&lt;/h2&gt;
&lt;h3 id=&#34;先看一眼-当前已经有的日志文件-业务日志和gc日志&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先看一眼-当前已经有的日志文件-业务日志和gc日志&#34;&gt;#&lt;/a&gt; 先看一眼 当前已经有的日志文件，业务日志和 GC 日志&lt;/h3&gt;
&lt;p&gt;先估摸的看下，OOM 出现，一般都是话务量场景，有大量请求，这第一点属于是能看出来就好，看不来就算了&lt;/p&gt;
&lt;h3 id=&#34;分析dump文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分析dump文件&#34;&gt;#&lt;/a&gt; 分析 dump 文件&lt;/h3&gt;
&lt;p&gt;为啥没有优先用这个方法呢，因为现网都是 jre, 没有 jdk, 一般也咩有加上堆转储的启动参数，没有现成的 dump 文件&lt;br&gt;
这里分两种情况&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开启了堆转储参数，且 oom 已发生，这时候 JVM 会自动给生成 dump 文件 &lt;pre&gt;&lt;code&gt; 
java -XX:+HeapDumpOnOutOfMemoryError 
 -XX:HeapDumpPath&amp;#x3D;~&amp;#x2F;dumps&amp;#x2F;java_heapdump.hprof
 -jar test.jar
-XX:+HeapDumpOnOutOfMemoryError：当发生OutOfMemoryError时，生成堆转储文件。
-XX:HeapDumpPath&amp;#x3D;~&amp;#x2F;dumps&amp;#x2F;java_heapdump.hprof
 &lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;没有开启堆转储参数，那只能用命令了 &lt;pre&gt;&lt;code&gt;jmap -dump:format&amp;#x3D;b,file&amp;#x3D;test.hprof 1234
jamp -dump:format&amp;#x3D;b,file&amp;#x3D;[文件名] [pid]
pid 用jsp 或者 ps -ef | grep java&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;dump文件分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dump文件分析&#34;&gt;#&lt;/a&gt; dump 文件分析&lt;/h2&gt;
&lt;p&gt;说实话挺简单的，把 dump 文件下载到本地，用 visualvm 载入，就看哪个类占用最多就可以了，排除掉 char [] 和 String&lt;br&gt;
 如果程序里面咩有用自定义类，而全用 Map 的，可以动手打人了，所以说有条军规就是让别用 Map 来，弄贼多魔法值 Key, 维护和定位都麻烦.&lt;br&gt;
Map 的情况真的很难定位，排除 Map&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/08/15/docker-install-mysql-redis-rebabitMQ/</guid>
            <title>docker-install-mysql-redis-rebabitMQ</title>
            <link>http://example.com/2023/08/15/docker-install-mysql-redis-rebabitMQ/</link>
            <category>Docker</category>
            <category>Redis</category>
            <category>Windows</category>
            <category>安装教程</category>
            <pubDate>Tue, 15 Aug 2023 01:48:39 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;本文将指导您如何在 Windows 系统上安装 Docker, 并使用 Docker 来运行 Redis 容器。这种方法比直接在 Windows 上安装 Redis 更加简单和灵活。&lt;/p&gt;
&lt;h2 id=&#34;安装docker-desktop-for-windows&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装docker-desktop-for-windows&#34;&gt;#&lt;/a&gt; 安装 Docker Desktop for Windows&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;系统要求:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10 64 位: Pro, Enterprise 或 Education (Build 16299 或更高版本)&lt;/li&gt;
&lt;li&gt;启用 Hyper-V 和容器功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载 Docker Desktop:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问 &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker 官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;点击 &amp;quot;Download for Windows&amp;quot; 下载安装程序&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装步骤:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双击下载的安装文件&lt;/li&gt;
&lt;li&gt;按照安装向导的提示进行安装&lt;/li&gt;
&lt;li&gt;安装完成后，重启电脑&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;验证安装:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开命令提示符或 PowerShell&lt;/li&gt;
&lt;li&gt;运行  &lt;code&gt;docker --version&lt;/code&gt;  检查 Docker 是否正确安装&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;使用docker运行redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用docker运行redis&#34;&gt;#&lt;/a&gt; 使用 Docker 运行 Redis&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;拉取 Redis 镜像:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker pull redis
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行 Redis 容器:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --name my-redis -p 6379:6379 -d redis
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这条命令会创建一个名为 &amp;quot;my-redis&amp;quot; 的容器，并将容器的 6379 端口映射到主机的 6379 端口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;验证 Redis 是否运行:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker ps
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你应该能看到一个名为 &amp;quot;my-redis&amp;quot; 的容器正在运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;连接到 Redis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Redis 命令行客户端:&lt;pre&gt;&lt;code&gt;docker exec -it my-redis redis-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;或者使用其他 Redis 客户端工具，连接到 localhost:6379&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;管理redis容器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#管理redis容器&#34;&gt;#&lt;/a&gt; 管理 Redis 容器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;停止容器:  &lt;code&gt;docker stop my-redis&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动容器:  &lt;code&gt;docker start my-redis&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重启容器:  &lt;code&gt;docker restart my-redis&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除容器:  &lt;code&gt;docker rm my-redis&lt;/code&gt;  (需要先停止容器)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;配置redis持久化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置redis持久化&#34;&gt;#&lt;/a&gt; 配置 Redis 持久化&lt;/h2&gt;
&lt;p&gt;如果你需要 Redis 数据持久化，可以使用以下命令创建容器:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --name my-redis -p 6379:6379 -v /path/to/local/data:/data -d redis redis-server --appendonly yes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这会将 Redis 数据保存在指定的本地目录中。&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结语&#34;&gt;#&lt;/a&gt; 结语&lt;/h2&gt;
&lt;p&gt;通过 Docker 运行 Redis, 我们可以轻松地在 Windows 上使用这个强大的内存数据库，而无需担心复杂的安装和配置过程。希望这个指南能帮助你顺利地在 Windows 上设置 Docker 和 Redis 环境。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/05/23/%E5%B7%A5%E5%85%B7-%E5%A5%BD%E7%94%A8%E7%9A%84github%E9%95%9C%E5%83%8F%E7%AB%99/</guid>
            <title>[工具] 好用的github镜像站(持续更新)</title>
            <link>http://example.com/2023/05/23/%E5%B7%A5%E5%85%B7-%E5%A5%BD%E7%94%A8%E7%9A%84github%E9%95%9C%E5%83%8F%E7%AB%99/</link>
            <category>工具</category>
            <category>github</category>
            <pubDate>Tue, 23 May 2023 13:16:55 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;github镜像站&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#github镜像站&#34;&gt;#&lt;/a&gt; github 镜像站&lt;/h2&gt;
&lt;h3 id=&#34;下载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载&#34;&gt;#&lt;/a&gt; 下载&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://521github.com&#34;&gt;https://521github.com&lt;/a&gt;&lt;br&gt;
 这个真的快&lt;/p&gt;
&lt;h3 id=&#34;clone&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#clone&#34;&gt;#&lt;/a&gt; clone&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://gitclone.com&#34;&gt;https://gitclone.com&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/05/20/%E5%AE%9A%E4%BD%8D-%E5%BA%94%E7%94%A8%E9%A2%91%E7%B9%81FGC/</guid>
            <title>定位和解决应用频繁Full GC问题</title>
            <link>http://example.com/2023/05/20/%E5%AE%9A%E4%BD%8D-%E5%BA%94%E7%94%A8%E9%A2%91%E7%B9%81FGC/</link>
            <category>java</category>
            <category>定位</category>
            <category>JVM</category>
            <category>性能优化</category>
            <category>垃圾回收</category>
            <pubDate>Sat, 20 May 2023 13:17:01 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;在话务量环境中，我们发现接口响应变慢。由于该环境中运行着多种业务，难以直接判断是哪个业务引发了这个问题。因此，我们需要进行深入的性能分析和问题定位。&lt;/p&gt;
&lt;h2 id=&#34;问题定位过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题定位过程&#34;&gt;#&lt;/a&gt; 问题定位过程&lt;/h2&gt;
&lt;h3 id=&#34;1-使用jstat观察垃圾收集情况&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-使用jstat观察垃圾收集情况&#34;&gt;#&lt;/a&gt; 1. 使用 jstat 观察垃圾收集情况&lt;/h3&gt;
&lt;p&gt;首先，我们使用 &lt;code&gt;jstat -gcutil&lt;/code&gt;  命令查看垃圾收集的情况。观察结果显示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;老年代使用率较高&lt;/li&gt;
&lt;li&gt;GC 次数和时间明显偏多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些迹象表明系统可能正在频繁进行 Full GC。&lt;/p&gt;
&lt;h3 id=&#34;2-使用jmap分析堆内存&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-使用jmap分析堆内存&#34;&gt;#&lt;/a&gt; 2. 使用 jmap 分析堆内存&lt;/h3&gt;
&lt;p&gt;接下来，我们使用 &lt;code&gt;jmap -heap &amp;lt;pid&amp;gt;&lt;/code&gt;  命令查看堆内存使用情况，发现内存使用量确实很高。&lt;/p&gt;
&lt;p&gt;为了进一步分析，我们执行了以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;手动触发一次 Full GC： &lt;code&gt;jmap -histo:live &amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;再次执行 &lt;code&gt;jmap -heap &amp;lt;pid&amp;gt;&lt;/code&gt;  查看堆内存情况&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;执行完后，再执行 &lt;code&gt;jmap -heap &amp;lt;pid&amp;gt;&lt;/code&gt; ，没有发现明显变化。&lt;/p&gt;
&lt;p&gt;这时我们推测，JVM 中可能没有多少可回收的垃圾，问题可能出在某个业务模块使用了大量缓存（如 Map 等数据结构）。不过，这个结论还不够确定，因为 &lt;code&gt;jmap -histo:live&lt;/code&gt;  的结果可能受到正在执行的线程影响，这一步得出的结论还不足以定位出具体是哪一块的问题。&lt;/p&gt;
&lt;h3 id=&#34;3-分析堆转储文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-分析堆转储文件&#34;&gt;#&lt;/a&gt; 3. 分析堆转储文件&lt;/h3&gt;
&lt;p&gt;为了获得更详细的信息，我们决定生成堆转储文件进行分析：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jmap -dump:format=b,file=/home/xxx/sch/my.dump &amp;lt;pid&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们使用 VisualVM 分析 dump 文件（也可以使用 MAT）。分析结果显示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt;  对象数量异常多&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SimpleMessage&lt;/code&gt;  对象数量异常多&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LinkedBlockingQueue$Node&lt;/code&gt;  对象数量异常多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过代码审查，我们发现这些对象与线程池的任务队列有关。进一步分析发现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用了无界队列&lt;/li&gt;
&lt;li&gt;消费速度跟不上生产速度&lt;/li&gt;
&lt;li&gt;队列中积压了大量任务，从而触发频繁的 Full GC&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们意识到，如果继续这样下去，很可能会导致 OutOfMemoryError。&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h2&gt;
&lt;p&gt;问题定位后，我们考虑了以下解决方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;修改队列类型：考虑到原设计可能有其合理性，我们暂时没有采取这个方案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优化任务处理逻辑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将原来使用 &lt;code&gt;synchronized&lt;/code&gt;  的地方改为使用 &lt;code&gt;Lock&lt;/code&gt; ，降低锁的粒度。&lt;/li&gt;
&lt;li&gt;实现批量处理逻辑：当队列中任务数量超过阈值时，启用批量处理模式，提高处理效率。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实施步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们首先在话务量环境中部署了第一个优化方案（使用 &lt;code&gt;Lock&lt;/code&gt;  替换 &lt;code&gt;synchronized&lt;/code&gt; ）。&lt;/li&gt;
&lt;li&gt;验证没有问题后，这解决了紧急情况。&lt;/li&gt;
&lt;li&gt;随后，我们又实现并部署了批量处理的优化，进一步提升了系统性能。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;这次问题的解决过程展示了系统性能优化的一般步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发现问题：监控系统性能指标。&lt;/li&gt;
&lt;li&gt;初步分析：使用 JVM 工具如 &lt;code&gt;jstat&lt;/code&gt;  和 &lt;code&gt;jmap&lt;/code&gt;  快速定位可能的问题区域。&lt;/li&gt;
&lt;li&gt;深入分析：生成并分析堆转储文件，结合代码审查找出根本原因。&lt;/li&gt;
&lt;li&gt;制定方案：根据分析结果设计优化方案。&lt;/li&gt;
&lt;li&gt;逐步实施：先解决紧急问题，然后进行进一步的优化。&lt;/li&gt;
&lt;li&gt;持续监控：部署优化方案后继续监控系统，确保问题得到解决。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/01/26/int-tinyint/</guid>
            <title>mysql 无符号数值类型与JAVA数值类型映射问题</title>
            <link>http://example.com/2023/01/26/int-tinyint/</link>
            <category>mysql</category>
            <category>java</category>
            <pubDate>Thu, 26 Jan 2023 14:33:42 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;mysql 无符号数值类型与 JAVA 数值类型映射问题&lt;/p&gt;
&lt;h3 id=&#34;起因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#起因&#34;&gt;#&lt;/a&gt; 起因&lt;/h3&gt;
&lt;p&gt;之前忙着弄的项目 1.0, 准备迁移到 2.0 了，需要专门做数据迁移，正好活也分了一部分过来，遇到问题，一个预期返回值类型为 Integer 的值，实际返回了 Long 类型回来，导致结果映射错误，一开始感觉没有道理呀，开发环境没有遇上呀，为啥测试环境能出这个问题，登上测试环境，一看数据库 这个字段 类型 是 int unsigned, 开发环境这个字段是 tinyint unsigned&lt;/p&gt;
&lt;h3 id=&#34;定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位&#34;&gt;#&lt;/a&gt; 定位&lt;/h3&gt;
&lt;p&gt;开发环境和测试环境，数据表字段类型不一致，估摸就是升级脚本有问题，我们开发环境一般都是直接新装，测试环境都一直升级，查了一下升级脚本，果然是升级脚本的问题&lt;br&gt;
建表语句给定的类型是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tinyint unsigned&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而升级脚本里面给定的类型是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int unsigned&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 Java 中，无符号数值并没有直接的原生类型支持. Java 的整数类型（byte, short, int, long）都是有符号的，int unsigned 最大值已经超过 Integer 最大值了，只能用 Long 接收，这次使用的是 JdbcTemplate, 其他的 ORM 框架还没试过，不过其他 ORM 框架都是基于 jdbc 开发，结果也应该是一样的&lt;/p&gt;
&lt;h3 id=&#34;感想&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#感想&#34;&gt;#&lt;/a&gt; 感想&lt;/h3&gt;
&lt;p&gt;真的少用 unsigned , 和 JAVA 不太搭，容易给别人埋坑&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/08/10/diypc/</guid>
            <title>记10年来, 再度DIY主机</title>
            <link>http://example.com/2022/08/10/diypc/</link>
            <category>diy</category>
            <category>pc</category>
            <pubDate>Wed, 10 Aug 2022 14:31:14 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原因&#34;&gt;#&lt;/a&gt; 原因&lt;/h2&gt;
&lt;p&gt;我的笔记本 2015 年买的，已经用了快 7 年了，终于凉了，不得不搞一台电脑来用，上一次自己装机好像都过了 10 年了.&lt;/p&gt;
&lt;h2 id=&#34;平台选择&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#平台选择&#34;&gt;#&lt;/a&gt; 平台选择&lt;/h2&gt;
&lt;p&gt;平台也就两种可选择，AMD or Intel, AMD 一直都没接触过，不太敢碰，Intel 摸过 G502 Q6600 I3-3240,&lt;br&gt;
 感觉还是对 Intel 更熟悉一些，而且 Intel 核显不阉割核心，我也没玩什么单机游戏，就玩玩 LOL, 暂时用核显应该也是够用的&lt;/p&gt;
&lt;h2 id=&#34;cpu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cpu&#34;&gt;#&lt;/a&gt; CPU&lt;/h2&gt;
&lt;p&gt;CPU 没啥说的 12 代相较于 11 代提升还是很大的，来看下规格&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;型号&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;核心&lt;br/&gt;线程数&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;P-Core 频率 &lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;E-Core 频率&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;L3 缓存&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;功耗&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;内存速度&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;核显&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i9-1290&lt;br/&gt;Core i9-12900KF&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8P+8E/24&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.2/5.2 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.4/3.9 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;30MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;241/125W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770 N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i9-12900&lt;br/&gt;Core i9-12900F&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8P+8E/24&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.4/5.1 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.8/3.8 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;30MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;202/65W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770 N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i9-12900T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8P+8E/24&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.4/4.9 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.0/3.6 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;30MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;106/35W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i7-12700K&lt;br/&gt;Core i7-12700KF&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8P+4E/20&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.6/5.0 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.7/3.8 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;25MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;190/125W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770 N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i7-12700&lt;br/&gt;Core i7-12700F&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8P+4E/20&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.1/4.9 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.6/3.6 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;25MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;180/65W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770 N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i7-12700T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8P+4E/20&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.4/4.7 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.0/3.4 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;25MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;99/35W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i5-12600K&lt;br/&gt;Core i5-12600KF&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6P+4E/16&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.7/4.9 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.8/3.6 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;20MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;150/125W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770 N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i5-12600&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6P+0E/12&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.3/4.8 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;18MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;117/65W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i5-12600T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6P+0E/12&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.1/4.6 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;18MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;74/35W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i5-12500&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6P+0E/12&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.0/4.6 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;18MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;117/65W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i5-12500T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6P+0E/12&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.0/4.4 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;18MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;74/35W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i5-12400&lt;br/&gt;Core i5-12400F&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6P+0E/12&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.5/4.4 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;18MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;117/65W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 730 N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i5-12400T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6P+0E/12&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.8/4.2 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;18MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;74/35W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 730&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i3-12300&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4P+0E/8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.3/4.3 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;12MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;89/60W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 730&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i3-12300T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4P+0E/8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.3/4.2 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;12MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;69/35W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 730&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i3-12100&lt;br/&gt;Core i3-12100F&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4P+0E/8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.3/4.3 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;12MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;89/60W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 730&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Core i3-12100T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4P+0E/8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.2/4.1 GHz&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;12MB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;69/35W&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DDR5-4800 DDR4-3200&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UHD 730&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;虽然这上面看着很多，真正方便买到的，只有 12100 12400 12600 12700&lt;br&gt;
12100 只有四核心，12600 12700 又太贵了，12400 和 12600 都是 6 大核，12600 也只是多了四个小核，12400 就是主频不如 12600, 不能超内存，其他的都还好&lt;/p&gt;
&lt;h2 id=&#34;主板&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主板&#34;&gt;#&lt;/a&gt; 主板&lt;/h2&gt;
&lt;p&gt;主板选择上，H610 B660, 我选择了微星的 B660M 迫击炮 DDR4 WIFI 版本，方便以后升级，选 DDR4 的版本，主要是 D4 的条子比较便宜 D5 的都还挺贵的. wifi 很重要，租的房子里面拉网线到卧室很麻烦.&lt;/p&gt;
&lt;h2 id=&#34;机箱&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#机箱&#34;&gt;#&lt;/a&gt; 机箱&lt;/h2&gt;
&lt;p&gt;机箱，我看了不少了，一开始想上 ITX 的，但是感觉自己不是很会装机，理线也不会，还是放弃 ITX, 从 MATX 机箱里面找，瞧中了乔思伯 D30, 选的白色版本，银色顶盖是黑色的，害，要是银色的应该也是白色，我应该就买银色了&lt;/p&gt;
&lt;h2 id=&#34;电源&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#电源&#34;&gt;#&lt;/a&gt; 电源&lt;/h2&gt;
&lt;p&gt;电源是顺带买机箱的时候，一起在京东上面买的，海韵 CORE GX650, 650W 应该是够了的，买来装机的时候发现，线材超级硬，插线真是苦了我&lt;/p&gt;
&lt;h2 id=&#34;内存&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存&#34;&gt;#&lt;/a&gt; 内存&lt;/h2&gt;
&lt;p&gt;因为 12400 D4 不能超频，默认最高就 3200, 所以我指的最便宜的买，也是在京东上面买的 光威天策 3200 16G*2&lt;/p&gt;
&lt;h3 id=&#34;超频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#超频&#34;&gt;#&lt;/a&gt; 超频&lt;/h3&gt;
&lt;p&gt;试了一下内存超频，只能超到 3500 c18&lt;br&gt;
12400 SA 电压有 0.981V 看了颗粒 垃圾玩意，干&lt;/p&gt;
&lt;h2 id=&#34;散热器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#散热器&#34;&gt;#&lt;/a&gt; 散热器&lt;/h2&gt;
&lt;p&gt;咸鱼上面淘了个 PA120 6 热管的，装机的时候，后悔了，很大，机箱又不是 ATX, 很难装，没有足够长的螺丝刀，拧螺丝很麻烦&lt;/p&gt;
&lt;h2 id=&#34;硬盘&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#硬盘&#34;&gt;#&lt;/a&gt; 硬盘&lt;/h2&gt;
&lt;p&gt;硬盘，我选的 PM981A 这个是三星 980pro 的 OEM 版本，性能很强 512G 系统盘够了&lt;/p&gt;
&lt;h3 id=&#34;20220822-加装机械硬盘&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#20220822-加装机械硬盘&#34;&gt;#&lt;/a&gt; 20220822 加装机械硬盘&lt;/h3&gt;
&lt;p&gt;买了块海康威视 希捷监控盘 4T&lt;br&gt;
 型号 ST4000VX015-3CU104, 挺不错的，也学会用 qbittorrent 了，可以用来下载动漫&lt;/p&gt;
&lt;h3 id=&#34;20221210-加装固态硬盘&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#20221210-加装固态硬盘&#34;&gt;#&lt;/a&gt; 20221210 加装固态硬盘&lt;/h3&gt;
&lt;p&gt;最近致钛很火呀，又便宜，支持国产&lt;br&gt;
型号 ZHITAI TiPlus5000 只花了 414, 用了 99 元的拼多多券&lt;/p&gt;
&lt;h2 id=&#34;机箱风扇&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#机箱风扇&#34;&gt;#&lt;/a&gt; 机箱风扇&lt;/h2&gt;
&lt;p&gt;风扇也是在咸鱼上面买的，5 把工包利民 3 正 2 反，还有 ARGB 极速 1500&lt;/p&gt;
&lt;h2 id=&#34;遇到的麻烦&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#遇到的麻烦&#34;&gt;#&lt;/a&gt; 遇到的麻烦&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;电源的线材很硬，非常难插&lt;/li&gt;
&lt;li&gt;散热器很大，没办法先装在主板上，不然我拧不到主板的螺丝，装上主板后，再装散热器双塔也很深，我还是不容易拧到散热器螺丝 (螺丝刀太短了)&lt;/li&gt;
&lt;li&gt;5 把风扇，很难接线，3 把出风的扇子，我接的水泵的，两把底部入风，我接的系统风扇，插线很麻烦&lt;/li&gt;
&lt;li&gt;装完风扇后，再装跳线，难得要死&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;下一次装机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下一次装机&#34;&gt;#&lt;/a&gt; 下一次装机&lt;/h2&gt;
&lt;p&gt;换水冷吧，风冷感觉好麻烦&lt;br&gt;
电源线材用软一点的，有那种带编织线的&lt;br&gt;
电源可以最后装的的，因为电源连主板的线，只有 CPU 和 24pin 主板线，最后装应该很轻松&lt;br&gt;
机箱 D30 感觉背部空间好少，本来想把多出来的线都移到后面的，放不下，只能都堆到前面来&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/04/07/sql-max-method/</guid>
            <title>验证码设计及mysql max函数</title>
            <link>http://example.com/2021/04/07/sql-max-method/</link>
            <category>mysql</category>
            <pubDate>Wed, 07 Apr 2021 14:28:51 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;起因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#起因&#34;&gt;#&lt;/a&gt; 起因&lt;/h2&gt;
&lt;p&gt;事情是这样的，一线有反馈存在验证码的问题，频率为偶现，接到反馈后，我还有点懵，有问题就有问题嘛，还是偶现问题&lt;/p&gt;
&lt;h2 id=&#34;定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位&#34;&gt;#&lt;/a&gt; 定位&lt;/h2&gt;
&lt;p&gt;我先自己测试环境试了一下，连着 10 个验证码都没有这个问题，又到生产环境试了 10 个，也没有这个问题，哦嗬，那没法了，问题没法复现，那先看下日志吧，问了一下一线的同事，没给啥信息出来，那就只能代码走读了，然后就一层一层网上扒，一阵看下来，发现这个 查询验证码的 sql 问题很大&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select max(id), verifyCode, used, phoneNumber, creteTime ...
from sms where verifyCode &amp;#x3D;  limit 1;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;max 函数只对结果集的对应参数列有效，和其他列无关系，这个 sql 查询到的结果&lt;br&gt;
只能查询到 verifyCode 对应最早的一条数据，这样的问题居然到我这里才爆出来，运气挺好&lt;br&gt;
 6 位的验证码，也就是这种实现逻辑下，只有 899999 个有效值，哈哈哈，应该还是当初代码检视太随意了&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h2&gt;
&lt;h3 id=&#34;方案一&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方案一&#34;&gt;#&lt;/a&gt; 方案一&lt;/h3&gt;
&lt;p&gt;直接修改这个 sql, max 函数一点作用都没有&lt;br&gt;
修改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select id, verifyCode, used, phoneNumber, creteTime ...
from sms where verifyCode &amp;#x3D;  order by id desc limit 1;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这种方式简单，不需要其他中间件，改起来也快，但是不太容易扩展&lt;/p&gt;
&lt;h3 id=&#34;方案二&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方案二&#34;&gt;#&lt;/a&gt; 方案二&lt;/h3&gt;
&lt;p&gt;借用 redis, key 自带过期时间的，能查询到就代表有效，之前的设计里面，还分为 无效验证码和过期验证码，真没必要，纯粹只有无效验证码&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/04/05/%E6%82%A0%E5%93%89%E6%97%A5%E5%B8%B8%E5%A4%A7%E7%8E%8B%E5%AE%8C%E7%BB%93/</guid>
            <title>日常的终结，回忆的开始</title>
            <link>http://example.com/2021/04/05/%E6%82%A0%E5%93%89%E6%97%A5%E5%B8%B8%E5%A4%A7%E7%8E%8B%E5%AE%8C%E7%BB%93/</link>
            <category>日常</category>
            <category>动漫</category>
            <pubDate>Mon, 05 Apr 2021 12:56:00 +0000</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;第一次看的时候还是高中生-完结时-竟已成社会人&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一次看的时候还是高中生-完结时-竟已成社会人&#34;&gt;#&lt;/a&gt; 第一次看的时候还是高中生，完结时，竟已成社会人&lt;/h1&gt;
&lt;h1 id=&#34;时间过得很快青春就那么短暂&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#时间过得很快青春就那么短暂&#34;&gt;#&lt;/a&gt; 时间过得很快，青春就那么短暂&lt;/h1&gt;
&lt;img loading=&#34;lazy&#34; data-src=&#34;/2021/04/05/%E6%82%A0%E5%93%89%E6%97%A5%E5%B8%B8%E5%A4%A7%E7%8E%8B%E5%AE%8C%E7%BB%93/10010.avif&#34; class=&#34;&#34;&gt; ]]></description>
        </item>
    </channel>
</rss>
