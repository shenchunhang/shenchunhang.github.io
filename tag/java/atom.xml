<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title> • Posts by &#34;java&#34; tag</title>
    <link href="http://example.com" />
    <updated>2024-04-22T13:28:34.000Z</updated>
    <category term="超频" />
    <category term="硬件" />
    <category term="Intel" />
    <category term="i5-12400" />
    <category term="diy" />
    <category term="pc" />
    <category term="Docker" />
    <category term="Redis" />
    <category term="Windows" />
    <category term="安装教程" />
    <category term="hexo" />
    <category term="Shoka" />
    <category term="ShokaX" />
    <category term="mysql" />
    <category term="java" />
    <category term="定位" />
    <category term="struts2" />
    <category term="JVM" />
    <category term="源码" />
    <category term="websocket" />
    <category term="依赖升级" />
    <category term="安全漏洞" />
    <category term="性能优化" />
    <category term="垃圾回收" />
    <category term="工具" />
    <category term="github" />
    <category term="日常" />
    <category term="动漫" />
    <entry>
        <id>http://example.com/2024/04/22/websocket%E4%B8%89%E6%96%B9%E5%BC%80%E6%BA%90%E4%BB%B6%E5%8D%87%E7%BA%A7/</id>
        <title>websocket三方开源件升级经验分享</title>
        <link rel="alternate" href="http://example.com/2024/04/22/websocket%E4%B8%89%E6%96%B9%E5%BC%80%E6%BA%90%E4%BB%B6%E5%8D%87%E7%BA%A7/"/>
        <content type="html">&lt;h2 id=&#34;背景介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景介绍&#34;&gt;#&lt;/a&gt; 背景介绍&lt;/h2&gt;
&lt;p&gt;在一个项目中，我们使用了其他同事提供的 websocket 代码。项目接近测试结束阶段时，我对代码进行了审查，发现 IDE 提示当前使用的 websocket 版本存在 CVE 漏洞。起初认为这可能只是一个小问题，只需要简单地升级版本就能解决。然而，事实证明这个过程比预想的要复杂得多。&lt;/p&gt;
&lt;h2 id=&#34;使用的开源组件orgjava-websocket&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用的开源组件orgjava-websocket&#34;&gt;#&lt;/a&gt; 使用的开源组件：org.java-websocket&lt;/h2&gt;
&lt;p&gt;原始依赖版本是 1.3.0：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org.java-websocket&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Java-WebSocket&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1.3.0&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;升级过程中遇到的主要问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#升级过程中遇到的主要问题&#34;&gt;#&lt;/a&gt; 升级过程中遇到的主要问题&lt;/h2&gt;
&lt;p&gt;当我尝试将版本直接升级到最新的 1.5.6 时，遇到了两个主要问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;API 发生变化&lt;/li&gt;
&lt;li&gt;信任所有证书的方法报错&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;1-api变化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-api变化&#34;&gt;#&lt;/a&gt; 1. API 变化&lt;/h3&gt;
&lt;p&gt;升级前后的代码对比：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 升级前&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt; client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uri&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Draft_76&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt; sc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;TLS&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;kmf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getKeyManagers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; tmf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTrustManagers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setWebSocketFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultSSLWebSocketServerFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sc&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 升级后&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt; client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uri&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Draft_6455&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt; sc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;TLS&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; trustAllCerts&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;security&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;SecureRandom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setSocketFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSocketFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;主要变化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setWebSocketFactory()&lt;/code&gt;  方法变为  &lt;code&gt;setSocketFactory()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Draft_76&lt;/code&gt;  更新为  &lt;code&gt;Draft_6455&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过查看 GitHub 上的官方示例和 git 记录，我发现 API 经历了以下变化：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;chatclient.setWebSocketFactory(new SSLWebSocketClientFactory(sslContext));&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chatclient.setSocket(factory.createSocket());&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chatclient.setSocketFactory(factory);&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-信任所有证书报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-信任所有证书报错&#34;&gt;#&lt;/a&gt; 2. 信任所有证书报错&lt;/h3&gt;
&lt;p&gt;升级后，日志中出现了证书校验的报错。通过源码分析，发现问题出在 &lt;code&gt;chooseTrustManager&lt;/code&gt;  方法：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;X509TrustManager&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;chooseTrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;TrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; tm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 代码省略...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AbstractTrustManagerWrapper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509TrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;tm&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个方法返回的 &lt;code&gt;AbstractTrustManagerWrapper&lt;/code&gt;  包含了证书校验逻辑，而不是使用我们自定义的 &lt;code&gt;X509TrustManager&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h2&gt;
&lt;p&gt;为了解决这个问题，我们需要实现 &lt;code&gt;X509ExtendedTrustManager&lt;/code&gt;  接口。以下是修改后的代码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;generateWebsocketClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; uri&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URISyntaxException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt; client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyWebsocketClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;URI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uri&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Draft_6455&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;TrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; trustAllCerts &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;X509ExtendedTrustManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkClientTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkServerTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getAcceptedIssuers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkClientTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Socket&lt;/span&gt; socket&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkServerTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Socket&lt;/span&gt; socket&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkClientTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSLEngine&lt;/span&gt; engine&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkServerTrusted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X509Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; authType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSLEngine&lt;/span&gt; engine&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CertificateException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt; sc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SSLContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;SSL&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        sc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; trustAllCerts&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;security&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;SecureRandom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setSocketFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSocketFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;NoSuchAlgorithmException&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;KeyManagementException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; connected &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        connected &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;connectBlocking&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;InterruptedException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;connectBlocking fail&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;connected&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;升级第三方依赖时，要仔细查看更新日志和 API 变化。&lt;/li&gt;
&lt;li&gt;对于安全相关的更改，如 SSL/TLS 配置，需要特别注意。&lt;/li&gt;
&lt;li&gt;在升级过程中，逐步测试每个变更是很重要的。&lt;/li&gt;
&lt;li&gt;保持与开源社区的最新动态同步，可以帮助我们更好地理解和应对 API 变化。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="java" />
        <category term="源码" />
        <category term="websocket" />
        <category term="依赖升级" />
        <category term="安全漏洞" />
        <updated>2024-04-22T13:28:34.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/04/21/max-http-header-size%E5%BC%95%E8%B5%B7%E7%9A%84OOM/</id>
        <title>max-http-header-size引起的OOM</title>
        <link rel="alternate" href="http://example.com/2024/04/21/max-http-header-size%E5%BC%95%E8%B5%B7%E7%9A%84OOM/"/>
        <content type="html"></content>
        <category term="java" />
        <category term="定位" />
        <updated>2024-04-21T15:13:22.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/04/18/websocketClient%E8%AE%B0%E5%BE%97close/</id>
        <title>websocketClient记得close</title>
        <link rel="alternate" href="http://example.com/2024/04/18/websocketClient%E8%AE%B0%E5%BE%97close/"/>
        <content type="html">&lt;h2 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;最近开发了一个特性，关于 websocket 的功能，代码量直接给感到了 5k, 联调都好了，程序就挂在服务器上，然后就没管了，今天发现这个服务器，卡卡的，一看 CPU 占用 500%, 惊了&lt;/p&gt;
&lt;h2 id=&#34;定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位&#34;&gt;#&lt;/a&gt; 定位&lt;/h2&gt;
&lt;h3 id=&#34;先看哪个线程这么吃cpu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先看哪个线程这么吃cpu&#34;&gt;#&lt;/a&gt; 先看哪个线程这么吃 CPU&lt;/h3&gt;
&lt;p&gt;top -Hp pid, 这个是查看线程，直接 top 显示的都是进程&lt;br&gt;
然后取 CPU 占用最高的一个，printf “% x\n” 线程号，&lt;br&gt;
 再用 jstack pid &amp;gt; stack.txt&lt;br&gt;
 在 stack.txt 里面检索一下，发现是 GC 的线程，看了 CPU 占用最高的几个线程，都是 GC 的，然后突然发现端倪，为什么 Thread-XXX 的线程这么多呢，有几千个，看栈帧，看线程名，只能知道是系统龙出来的，但是我自己弄的线程都是有给命名的，感觉很奇怪&lt;/p&gt;
&lt;h3 id=&#34;先看gc情况-判断是一直在gc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先看gc情况-判断是一直在gc&#34;&gt;#&lt;/a&gt; 先看 GC 情况，判断是一直在 GC&lt;/h3&gt;
&lt;p&gt;用 jstat -gcutil pid 1000 10, 发现 FGC 很少，但是 YGC 却来得很多，还一直再增长，这种情况，没有 FGC, 一直 YGC, 那多半，并没有大对象，如果是大对象就直接进老年代，触发 FGC 了&lt;/p&gt;
&lt;h3 id=&#34;查看heapdump&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看heapdump&#34;&gt;#&lt;/a&gt; 查看 heapdump&lt;/h3&gt;
&lt;p&gt;本来准备先 jmap -heap pid 的，结果上传到服务器的 jdk 和 jre 版本不支持，索性直接 jmap -dump:format=b,file=home/xxx/pid.dump, 推荐用 mat（Memory Analyzer Tool）, visualvm, 还是太简陋了，不容易分析，大概看了一遍，没有自己封装的对象在，&lt;br&gt;
 然后我又检索了一下 websocket 的类名，发现 2000 多个，哦和，问题肯定出现在 new WebscoketClient 的地方，走读了一下代码，发现连接不通的时候没有 close, 导致 GC 一直不把他当成垃圾&lt;/p&gt;
&lt;h3 id=&#34;源码解析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#源码解析&#34;&gt;#&lt;/a&gt; 源码解析&lt;/h3&gt;
&lt;p&gt;WebSocketClient 中有两个线程对象，&lt;br&gt;
private Thread writeThread;&lt;br&gt;
private Thread connectReadThread;&lt;br&gt;
 所以现象中有线程数爆炸，且命名也是系统给的，让人混淆&lt;br&gt;
再说为什么会有这么多自定义的 WebSocketClient 对象，因为代码终有重连机制&lt;br&gt;
改正也简单，加上 连接失败，机上 close 就可以了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
public abstract class WebSocketClient extends AbstractWebSocket implements Runnable, WebSocket {

&amp;#x2F;**
* The URI this channel is supposed to connect to.
*&amp;#x2F;
protected URI uri &amp;#x3D; null;

&amp;#x2F;**
* The underlying engine
*&amp;#x2F;
private WebSocketImpl engine &amp;#x3D; null;

&amp;#x2F;**
* The socket for this WebSocketClient
*&amp;#x2F;
private Socket socket &amp;#x3D; null;

&amp;#x2F;**
* The SocketFactory for this WebSocketClient
*
* @since 1.4.0
*&amp;#x2F;
private SocketFactory socketFactory &amp;#x3D; null;

&amp;#x2F;**
* The used OutputStream
*&amp;#x2F;
private OutputStream ostream;

&amp;#x2F;**
* The used proxy, if any
*&amp;#x2F;
private Proxy proxy &amp;#x3D; Proxy.NO_PROXY;

&amp;#x2F;**
* The thread to write outgoing message
*&amp;#x2F;
private Thread writeThread;

&amp;#x2F;**
* The thread to connect and read message
*&amp;#x2F;
private Thread connectReadThread;

&amp;#x2F;**
* The draft to use
*&amp;#x2F;
private Draft draft;

&amp;#x2F;**
* The additional headers to use
*&amp;#x2F;
private Map&amp;lt;String, String&amp;gt; headers;

&amp;#x2F;**
* The latch for connectBlocking()
*&amp;#x2F;
private CountDownLatch connectLatch &amp;#x3D; new CountDownLatch(1);

&amp;#x2F;**
* The latch for closeBlocking()
*&amp;#x2F;
private CountDownLatch closeLatch &amp;#x3D; new CountDownLatch(1);

&amp;#x2F;**
* The socket timeout value to be used in milliseconds.
*&amp;#x2F;
private int connectTimeout &amp;#x3D; 0;

&amp;#x2F;**
* DNS resolver that translates a URI to an InetAddress
*
* @see InetAddress
* @since 1.4.1
*&amp;#x2F;
private DnsResolver dnsResolver &amp;#x3D; null;&lt;/code&gt;&lt;/pre&gt;</content>
        <category term="java" />
        <category term="定位" />
        <category term="JVM" />
        <updated>2024-04-18T14:30:58.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/</id>
        <title>struts2集合参数-只能接收256个</title>
        <link rel="alternate" href="http://example.com/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/"/>
        <content type="html">&lt;h2 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;测试那边转过来一个问题单，开发这边初步定位是 struts 框架接收集合参数只能接收到 256 个&lt;/p&gt;
&lt;h2 id=&#34;定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位&#34;&gt;#&lt;/a&gt; 定位&lt;/h2&gt;
&lt;h3 id=&#34;google一下&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#google一下&#34;&gt;#&lt;/a&gt; google 一下&lt;/h3&gt;
&lt;p&gt;先直接 google 了一下，感觉回答有点偏，说是 struts2.5.15 升级到 2.5.30 就会有这个问题，是 struts 改用 ArrayList 的 TypeConverter, 我自己去代码里面看根本咩有限制&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
public Object convertValue(Map&amp;lt;String, Object&amp;gt; context, Object target, Member member, String propertyName, Object value, Class toType) {
Collection result;
Class memberType &amp;#x3D; String.class;
    if (target !&amp;#x3D; null) {
        memberType &amp;#x3D; objectTypeDeterminer.getElementClass(target.getClass(), propertyName, null);
        if (memberType &amp;#x3D;&amp;#x3D; null) {
            memberType &amp;#x3D; String.class;
        }
    }
    if (toType.isAssignableFrom(value.getClass())) {
        &amp;#x2F;&amp;#x2F; no need to do anything
        result &amp;#x3D; (Collection) value;
    } else if (value.getClass().isArray()) {
        Object[] objArray &amp;#x3D; (Object[]) value;
        TypeConverter converter &amp;#x3D; getTypeConverter(context);
        result &amp;#x3D; createCollection(toType, memberType, objArray.length);
        for (Object anObjArray : objArray) {
            Object convertedValue &amp;#x3D; converter.convertValue(context, target, member, propertyName, anObjArray, memberType);
            if (!TypeConverter.NO_CONVERSION_POSSIBLE.equals(convertedValue)) {
                result.add(convertedValue);
            }
        }
    } else if (Collection.class.isAssignableFrom(value.getClass())) {
        Collection col &amp;#x3D; (Collection) value;
        TypeConverter converter &amp;#x3D; getTypeConverter(context);
        result &amp;#x3D; createCollection(toType, memberType, col.size());
        for (Object aCol : col) {
            Object convertedValue &amp;#x3D; converter.convertValue(context, target, member, propertyName, aCol, memberType);
            if (!TypeConverter.NO_CONVERSION_POSSIBLE.equals(convertedValue)) {
                result.add(convertedValue);
            }
        }
    } else {
        result &amp;#x3D; createCollection(toType, memberType, -1);
        TypeConverter converter &amp;#x3D; getTypeConverter(context);
        Object convertedValue &amp;#x3D; converter.convertValue(context, target, member, propertyName, value, memberType);
        if (!TypeConverter.NO_CONVERSION_POSSIBLE.equals(convertedValue)) {
            result.add(convertedValue);
        }
    }
    return result;
}&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;strutsognlexpressionmaxlength&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strutsognlexpressionmaxlength&#34;&gt;#&lt;/a&gt; struts.ognl.expressionMaxLength&lt;/h4&gt;
&lt;p&gt;这时候就这专门去 clone 了一下 struts 的仓库&lt;br&gt;
先切换到 2.5.33 版本，然后曲剧检索了一下 256, 还真让找到了一处配置&lt;/p&gt;
&lt;img loading=&#34;lazy&#34; data-src=&#34;/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/Snipaste_2024-04-22_22-01-35.png&#34; class=&#34;&#34; title=&#34;struts.ognl.expressionMaxLength&#34;&gt;
&lt;p&gt;但是被注释掉了，翻译过来，不配置的话，就不会被限制，实际情况，本来就没有设置这个参数，应该和在这个配置没有关系，而且实际给的参数列表超过了 256, 这个参数是接收 OGNL 的个数，我们出现的问题是 OGNL 集合参数被限制在 256 以内，&lt;/p&gt;
&lt;h4 id=&#34;strutsognlautogrowthcollectionlimit&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strutsognlautogrowthcollectionlimit&#34;&gt;#&lt;/a&gt; struts.ognl.autoGrowthCollectionLimit&lt;/h4&gt;
&lt;p&gt;无奈，只得继续看提交记录，好在提交记录 并不是很多，看着看着，又发现了一处&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
public Object getProperty(Map context, Object target, Object name) throws OgnlException {
    if (ReflectionContextState.isGettingByKeyProperty(context)
            || name.equals(XWorkCollectionPropertyAccessor.KEY_PROPERTY_FOR_CREATION)) {
        return _sAcc.getProperty(context, target, name);
    } else if (name instanceof String) {
        return super.getProperty(context, target, name);
    }
    ReflectionContextState.updateCurrentPropertyPath(context, name);
    Class lastClass &amp;#x3D; (Class) context.get(XWorkConverter.LAST_BEAN_CLASS_ACCESSED);
    String lastProperty &amp;#x3D; (String) context.get(XWorkConverter.LAST_BEAN_PROPERTY_ACCESSED);
    
    if (name instanceof Number
            &amp;amp;&amp;amp; ReflectionContextState.isCreatingNullObjects(context)
            &amp;amp;&amp;amp; objectTypeDeterminer.shouldCreateIfNew(lastClass,lastProperty,target,null,true)) {

        List list &amp;#x3D; (List) target;
        int index &amp;#x3D; ((Number) name).intValue();
        int listSize &amp;#x3D; list.size();

        if (lastClass &amp;#x3D;&amp;#x3D; null || lastProperty &amp;#x3D;&amp;#x3D; null) {
            return super.getProperty(context, target, name);
        }
        Class beanClass &amp;#x3D; objectTypeDeterminer.getElementClass(lastClass, lastProperty, name);
        if (listSize &amp;lt;&amp;#x3D; index) {
            Object result;
            if (index &amp;gt; autoGrowCollectionLimit) {
                throw new OgnlException(&amp;quot;Error auto growing collection size to &amp;quot; + index + &amp;quot; which limited to &amp;quot;
                                        + autoGrowCollectionLimit);
            }
            for (int i &amp;#x3D; listSize; i &amp;lt; index; i++) {
                list.add(null);
            }
            try {
                list.add(index, result &amp;#x3D; objectFactory.buildBean(beanClass, context));
            } catch (Exception exc) {
                throw new XWorkException(exc);
            }
            return result;
        } else if (list.get(index) &amp;#x3D;&amp;#x3D; null) {
            Object result;
            try {
                list.set(index, result &amp;#x3D; objectFactory.buildBean(beanClass, context));
            } catch (Exception exc) {
                throw new XWorkException(exc);
            }
            return result;
        }
    }
    return super.getProperty(context, target, name);
}&lt;/code&gt;&lt;/pre&gt;
&lt;img loading=&#34;lazy&#34; data-src=&#34;/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/Snipaste_2024-04-22_22-28-18.png&#34; class=&#34;&#34; title=&#34;struts.ognl.autoGrowthCollectionLimit&#34;&gt;
&lt;p&gt;早知道就一起检索 255 了，还看了这么多提交记录，这次直接到 struts 的配置里面加上，测试了一下，果然可以&lt;/p&gt;
&lt;h4 id=&#34;吐槽&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#吐槽&#34;&gt;#&lt;/a&gt; 吐槽&lt;/h4&gt;
&lt;p&gt;struts 真的可以，增加了 default 配置，也不写到版本更新里面去，还得自己来看源码才能知道&lt;/p&gt;
&lt;h4 id=&#34;推想&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#推想&#34;&gt;#&lt;/a&gt; 推想&lt;/h4&gt;
&lt;p&gt;struts.ognl.expressionMaxLength 这个配置，看了一下他们的 issue, 还是感觉挺好笑的，2.5.21 加上后，2.5.22 又给注释掉，实际外发的版本 2.5.21 都没了，&lt;br&gt;
&lt;a href=&#34;https://github.com/apache/struts/pull/380&#34;&gt;struts.ognl.expressionMaxLength 讨论&lt;/a&gt;&lt;/p&gt;
&lt;img loading=&#34;lazy&#34; data-src=&#34;/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/Snipaste_2024-04-22_22-44-21.png&#34; class=&#34;&#34; title=&#34;2.5.21缺失&#34;&gt;</content>
        <category term="java" />
        <category term="定位" />
        <category term="struts2" />
        <updated>2024-03-22T13:47:32.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/09/15/oom-help/</id>
        <title>快速定位OOM问题</title>
        <link rel="alternate" href="http://example.com/2023/09/15/oom-help/"/>
        <content type="html">&lt;h2 id=&#34;oom的原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#oom的原因&#34;&gt;#&lt;/a&gt; OOM 的原因&lt;/h2&gt;
&lt;h3 id=&#34;申请了大量的对象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#申请了大量的对象&#34;&gt;#&lt;/a&gt; 申请了大量的对象&lt;/h3&gt;
&lt;p&gt;写查询语句，不加 limit, 直接查到全表了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;select&amp;gt;
    select id, name, .... from user
    &amp;lt;where&amp;gt;
        &amp;lt;if test&amp;#x3D;&amp;#39;name !&amp;#x3D;null &amp;amp;&amp;amp; name!&amp;#x3D;&amp;#39;&amp;#39;&amp;#39;&amp;gt;
            name &amp;#x3D; #{name}
        &amp;lt;&amp;#x2F;if&amp;gt;
    &amp;lt;&amp;#x2F;where&amp;gt;
&amp;lt;&amp;#x2F;select&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当 name 等于 null 或者空字符串时，直接变成了查全表，有条军规就是查询必加 limit&lt;/p&gt;
&lt;h3 id=&#34;内存用尽-资源不释放&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存用尽-资源不释放&#34;&gt;#&lt;/a&gt; 内存用尽，资源不释放&lt;/h3&gt;
&lt;p&gt;Map 一直存，不做容量控制。定时任务最常见，要么是忘了 clear (), 要么就是没有设置 lru 之类的淘汰算法.&lt;br&gt;
 还有就是 IO 对象不释放，记得调用 close () 呀&lt;br&gt;
文件的话，记得调用 close (), 或者用 try-resource 语法糖&lt;br&gt;
如果是连接对象的话，可以用连接池，保证下限&lt;/p&gt;
&lt;h3 id=&#34;服务器内存真的低&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务器内存真的低&#34;&gt;#&lt;/a&gt; 服务器内存真的低&lt;/h3&gt;
&lt;p&gt;我们的开发环境，单台只给了 16G, 感觉数据多一点，就卡的不行&lt;br&gt;
可以用命令看下当前 堆的状态&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
jmap -heap&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;定位方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位方法&#34;&gt;#&lt;/a&gt; 定位方法&lt;/h2&gt;
&lt;h3 id=&#34;先看一眼-当前已经有的日志文件-业务日志和gc日志&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先看一眼-当前已经有的日志文件-业务日志和gc日志&#34;&gt;#&lt;/a&gt; 先看一眼 当前已经有的日志文件，业务日志和 GC 日志&lt;/h3&gt;
&lt;p&gt;先估摸的看下，OOM 出现，一般都是话务量场景，有大量请求，这第一点属于是能看出来就好，看不来就算了&lt;/p&gt;
&lt;h3 id=&#34;分析dump文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分析dump文件&#34;&gt;#&lt;/a&gt; 分析 dump 文件&lt;/h3&gt;
&lt;p&gt;为啥没有优先用这个方法呢，因为现网都是 jre, 没有 jdk, 一般也咩有加上堆转储的启动参数，没有现成的 dump 文件&lt;br&gt;
这里分两种情况&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开启了堆转储参数，且 oom 已发生，这时候 JVM 会自动给生成 dump 文件 &lt;pre&gt;&lt;code&gt; 
java -XX:+HeapDumpOnOutOfMemoryError 
 -XX:HeapDumpPath&amp;#x3D;~&amp;#x2F;dumps&amp;#x2F;java_heapdump.hprof
 -jar test.jar
-XX:+HeapDumpOnOutOfMemoryError：当发生OutOfMemoryError时，生成堆转储文件。
-XX:HeapDumpPath&amp;#x3D;~&amp;#x2F;dumps&amp;#x2F;java_heapdump.hprof
 &lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;没有开启堆转储参数，那只能用命令了 &lt;pre&gt;&lt;code&gt;jmap -dump:format&amp;#x3D;b,file&amp;#x3D;test.hprof 1234
jamp -dump:format&amp;#x3D;b,file&amp;#x3D;[文件名] [pid]
pid 用jsp 或者 ps -ef | grep java&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;dump文件分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dump文件分析&#34;&gt;#&lt;/a&gt; dump 文件分析&lt;/h2&gt;
&lt;p&gt;说实话挺简单的，把 dump 文件下载到本地，用 visualvm 载入，就看哪个类占用最多就可以了，排除掉 char [] 和 String&lt;br&gt;
 如果程序里面咩有用自定义类，而全用 Map 的，可以动手打人了，所以说有条军规就是让别用 Map 来，弄贼多魔法值 Key, 维护和定位都麻烦.&lt;br&gt;
Map 的情况真的很难定位，排除 Map&lt;/p&gt;
</content>
        <category term="java" />
        <category term="定位" />
        <updated>2023-09-15T13:38:44.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/05/20/%E5%AE%9A%E4%BD%8D-%E5%BA%94%E7%94%A8%E9%A2%91%E7%B9%81FGC/</id>
        <title>定位和解决应用频繁Full GC问题</title>
        <link rel="alternate" href="http://example.com/2023/05/20/%E5%AE%9A%E4%BD%8D-%E5%BA%94%E7%94%A8%E9%A2%91%E7%B9%81FGC/"/>
        <content type="html">&lt;h2 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;在话务量环境中，我们发现接口响应变慢。由于该环境中运行着多种业务，难以直接判断是哪个业务引发了这个问题。因此，我们需要进行深入的性能分析和问题定位。&lt;/p&gt;
&lt;h2 id=&#34;问题定位过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题定位过程&#34;&gt;#&lt;/a&gt; 问题定位过程&lt;/h2&gt;
&lt;h3 id=&#34;1-使用jstat观察垃圾收集情况&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-使用jstat观察垃圾收集情况&#34;&gt;#&lt;/a&gt; 1. 使用 jstat 观察垃圾收集情况&lt;/h3&gt;
&lt;p&gt;首先，我们使用 &lt;code&gt;jstat -gcutil&lt;/code&gt;  命令查看垃圾收集的情况。观察结果显示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;老年代使用率较高&lt;/li&gt;
&lt;li&gt;GC 次数和时间明显偏多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些迹象表明系统可能正在频繁进行 Full GC。&lt;/p&gt;
&lt;h3 id=&#34;2-使用jmap分析堆内存&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-使用jmap分析堆内存&#34;&gt;#&lt;/a&gt; 2. 使用 jmap 分析堆内存&lt;/h3&gt;
&lt;p&gt;接下来，我们使用 &lt;code&gt;jmap -heap &amp;lt;pid&amp;gt;&lt;/code&gt;  命令查看堆内存使用情况，发现内存使用量确实很高。&lt;/p&gt;
&lt;p&gt;为了进一步分析，我们执行了以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;手动触发一次 Full GC： &lt;code&gt;jmap -histo:live &amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;再次执行 &lt;code&gt;jmap -heap &amp;lt;pid&amp;gt;&lt;/code&gt;  查看堆内存情况&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;执行完后，再执行 &lt;code&gt;jmap -heap &amp;lt;pid&amp;gt;&lt;/code&gt; ，没有发现明显变化。&lt;/p&gt;
&lt;p&gt;这时我们推测，JVM 中可能没有多少可回收的垃圾，问题可能出在某个业务模块使用了大量缓存（如 Map 等数据结构）。不过，这个结论还不够确定，因为 &lt;code&gt;jmap -histo:live&lt;/code&gt;  的结果可能受到正在执行的线程影响，这一步得出的结论还不足以定位出具体是哪一块的问题。&lt;/p&gt;
&lt;h3 id=&#34;3-分析堆转储文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-分析堆转储文件&#34;&gt;#&lt;/a&gt; 3. 分析堆转储文件&lt;/h3&gt;
&lt;p&gt;为了获得更详细的信息，我们决定生成堆转储文件进行分析：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jmap -dump:format=b,file=/home/xxx/sch/my.dump &amp;lt;pid&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们使用 VisualVM 分析 dump 文件（也可以使用 MAT）。分析结果显示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt;  对象数量异常多&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SimpleMessage&lt;/code&gt;  对象数量异常多&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LinkedBlockingQueue$Node&lt;/code&gt;  对象数量异常多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过代码审查，我们发现这些对象与线程池的任务队列有关。进一步分析发现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用了无界队列&lt;/li&gt;
&lt;li&gt;消费速度跟不上生产速度&lt;/li&gt;
&lt;li&gt;队列中积压了大量任务，从而触发频繁的 Full GC&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们意识到，如果继续这样下去，很可能会导致 OutOfMemoryError。&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h2&gt;
&lt;p&gt;问题定位后，我们考虑了以下解决方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;修改队列类型：考虑到原设计可能有其合理性，我们暂时没有采取这个方案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优化任务处理逻辑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将原来使用 &lt;code&gt;synchronized&lt;/code&gt;  的地方改为使用 &lt;code&gt;Lock&lt;/code&gt; ，降低锁的粒度。&lt;/li&gt;
&lt;li&gt;实现批量处理逻辑：当队列中任务数量超过阈值时，启用批量处理模式，提高处理效率。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实施步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们首先在话务量环境中部署了第一个优化方案（使用 &lt;code&gt;Lock&lt;/code&gt;  替换 &lt;code&gt;synchronized&lt;/code&gt; ）。&lt;/li&gt;
&lt;li&gt;验证没有问题后，这解决了紧急情况。&lt;/li&gt;
&lt;li&gt;随后，我们又实现并部署了批量处理的优化，进一步提升了系统性能。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;这次问题的解决过程展示了系统性能优化的一般步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发现问题：监控系统性能指标。&lt;/li&gt;
&lt;li&gt;初步分析：使用 JVM 工具如 &lt;code&gt;jstat&lt;/code&gt;  和 &lt;code&gt;jmap&lt;/code&gt;  快速定位可能的问题区域。&lt;/li&gt;
&lt;li&gt;深入分析：生成并分析堆转储文件，结合代码审查找出根本原因。&lt;/li&gt;
&lt;li&gt;制定方案：根据分析结果设计优化方案。&lt;/li&gt;
&lt;li&gt;逐步实施：先解决紧急问题，然后进行进一步的优化。&lt;/li&gt;
&lt;li&gt;持续监控：部署优化方案后继续监控系统，确保问题得到解决。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="java" />
        <category term="定位" />
        <category term="JVM" />
        <category term="性能优化" />
        <category term="垃圾回收" />
        <updated>2023-05-20T13:17:01.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/01/26/int-tinyint/</id>
        <title>mysql 无符号数值类型与JAVA数值类型映射问题</title>
        <link rel="alternate" href="http://example.com/2023/01/26/int-tinyint/"/>
        <content type="html">&lt;p&gt;mysql 无符号数值类型与 JAVA 数值类型映射问题&lt;/p&gt;
&lt;h3 id=&#34;起因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#起因&#34;&gt;#&lt;/a&gt; 起因&lt;/h3&gt;
&lt;p&gt;之前忙着弄的项目 1.0, 准备迁移到 2.0 了，需要专门做数据迁移，正好活也分了一部分过来，遇到问题，一个预期返回值类型为 Integer 的值，实际返回了 Long 类型回来，导致结果映射错误，一开始感觉没有道理呀，开发环境没有遇上呀，为啥测试环境能出这个问题，登上测试环境，一看数据库 这个字段 类型 是 int unsigned, 开发环境这个字段是 tinyint unsigned&lt;/p&gt;
&lt;h3 id=&#34;定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位&#34;&gt;#&lt;/a&gt; 定位&lt;/h3&gt;
&lt;p&gt;开发环境和测试环境，数据表字段类型不一致，估摸就是升级脚本有问题，我们开发环境一般都是直接新装，测试环境都一直升级，查了一下升级脚本，果然是升级脚本的问题&lt;br&gt;
建表语句给定的类型是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tinyint unsigned&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而升级脚本里面给定的类型是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int unsigned&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 Java 中，无符号数值并没有直接的原生类型支持. Java 的整数类型（byte, short, int, long）都是有符号的，int unsigned 最大值已经超过 Integer 最大值了，只能用 Long 接收，这次使用的是 JdbcTemplate, 其他的 ORM 框架还没试过，不过其他 ORM 框架都是基于 jdbc 开发，结果也应该是一样的&lt;/p&gt;
&lt;h3 id=&#34;感想&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#感想&#34;&gt;#&lt;/a&gt; 感想&lt;/h3&gt;
&lt;p&gt;真的少用 unsigned , 和 JAVA 不太搭，容易给别人埋坑&lt;/p&gt;
</content>
        <category term="mysql" />
        <category term="java" />
        <updated>2023-01-26T14:33:42.000Z</updated>
    </entry>
</feed>
