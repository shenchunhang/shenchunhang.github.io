<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title> • Posts by &#34;struts2&#34; tag</title>
        <link>http://example.com</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Fri, 22 Mar 2024 13:47:32 +0000</pubDate>
        <lastBuildDate>Fri, 22 Mar 2024 13:47:32 +0000</lastBuildDate>
        <category>超频</category>
        <category>硬件</category>
        <category>Intel</category>
        <category>i5-12400</category>
        <category>diy</category>
        <category>pc</category>
        <category>Docker</category>
        <category>Redis</category>
        <category>Windows</category>
        <category>安装教程</category>
        <category>hexo</category>
        <category>Shoka</category>
        <category>ShokaX</category>
        <category>mysql</category>
        <category>java</category>
        <category>定位</category>
        <category>struts2</category>
        <category>JVM</category>
        <category>源码</category>
        <category>websocket</category>
        <category>依赖升级</category>
        <category>安全漏洞</category>
        <category>性能优化</category>
        <category>垃圾回收</category>
        <category>工具</category>
        <category>github</category>
        <category>日常</category>
        <category>动漫</category>
        <item>
            <guid isPermalink="true">http://example.com/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/</guid>
            <title>struts2集合参数-只能接收256个</title>
            <link>http://example.com/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/</link>
            <category>java</category>
            <category>定位</category>
            <category>struts2</category>
            <pubDate>Fri, 22 Mar 2024 13:47:32 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;测试那边转过来一个问题单，开发这边初步定位是 struts 框架接收集合参数只能接收到 256 个&lt;/p&gt;
&lt;h2 id=&#34;定位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位&#34;&gt;#&lt;/a&gt; 定位&lt;/h2&gt;
&lt;h3 id=&#34;google一下&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#google一下&#34;&gt;#&lt;/a&gt; google 一下&lt;/h3&gt;
&lt;p&gt;先直接 google 了一下，感觉回答有点偏，说是 struts2.5.15 升级到 2.5.30 就会有这个问题，是 struts 改用 ArrayList 的 TypeConverter, 我自己去代码里面看根本咩有限制&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
public Object convertValue(Map&amp;lt;String, Object&amp;gt; context, Object target, Member member, String propertyName, Object value, Class toType) {
Collection result;
Class memberType &amp;#x3D; String.class;
    if (target !&amp;#x3D; null) {
        memberType &amp;#x3D; objectTypeDeterminer.getElementClass(target.getClass(), propertyName, null);
        if (memberType &amp;#x3D;&amp;#x3D; null) {
            memberType &amp;#x3D; String.class;
        }
    }
    if (toType.isAssignableFrom(value.getClass())) {
        &amp;#x2F;&amp;#x2F; no need to do anything
        result &amp;#x3D; (Collection) value;
    } else if (value.getClass().isArray()) {
        Object[] objArray &amp;#x3D; (Object[]) value;
        TypeConverter converter &amp;#x3D; getTypeConverter(context);
        result &amp;#x3D; createCollection(toType, memberType, objArray.length);
        for (Object anObjArray : objArray) {
            Object convertedValue &amp;#x3D; converter.convertValue(context, target, member, propertyName, anObjArray, memberType);
            if (!TypeConverter.NO_CONVERSION_POSSIBLE.equals(convertedValue)) {
                result.add(convertedValue);
            }
        }
    } else if (Collection.class.isAssignableFrom(value.getClass())) {
        Collection col &amp;#x3D; (Collection) value;
        TypeConverter converter &amp;#x3D; getTypeConverter(context);
        result &amp;#x3D; createCollection(toType, memberType, col.size());
        for (Object aCol : col) {
            Object convertedValue &amp;#x3D; converter.convertValue(context, target, member, propertyName, aCol, memberType);
            if (!TypeConverter.NO_CONVERSION_POSSIBLE.equals(convertedValue)) {
                result.add(convertedValue);
            }
        }
    } else {
        result &amp;#x3D; createCollection(toType, memberType, -1);
        TypeConverter converter &amp;#x3D; getTypeConverter(context);
        Object convertedValue &amp;#x3D; converter.convertValue(context, target, member, propertyName, value, memberType);
        if (!TypeConverter.NO_CONVERSION_POSSIBLE.equals(convertedValue)) {
            result.add(convertedValue);
        }
    }
    return result;
}&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;strutsognlexpressionmaxlength&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strutsognlexpressionmaxlength&#34;&gt;#&lt;/a&gt; struts.ognl.expressionMaxLength&lt;/h4&gt;
&lt;p&gt;这时候就这专门去 clone 了一下 struts 的仓库&lt;br&gt;
先切换到 2.5.33 版本，然后曲剧检索了一下 256, 还真让找到了一处配置&lt;/p&gt;
&lt;img loading=&#34;lazy&#34; data-src=&#34;/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/Snipaste_2024-04-22_22-01-35.png&#34; class=&#34;&#34; title=&#34;struts.ognl.expressionMaxLength&#34;&gt;
&lt;p&gt;但是被注释掉了，翻译过来，不配置的话，就不会被限制，实际情况，本来就没有设置这个参数，应该和在这个配置没有关系，而且实际给的参数列表超过了 256, 这个参数是接收 OGNL 的个数，我们出现的问题是 OGNL 集合参数被限制在 256 以内，&lt;/p&gt;
&lt;h4 id=&#34;strutsognlautogrowthcollectionlimit&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strutsognlautogrowthcollectionlimit&#34;&gt;#&lt;/a&gt; struts.ognl.autoGrowthCollectionLimit&lt;/h4&gt;
&lt;p&gt;无奈，只得继续看提交记录，好在提交记录 并不是很多，看着看着，又发现了一处&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
public Object getProperty(Map context, Object target, Object name) throws OgnlException {
    if (ReflectionContextState.isGettingByKeyProperty(context)
            || name.equals(XWorkCollectionPropertyAccessor.KEY_PROPERTY_FOR_CREATION)) {
        return _sAcc.getProperty(context, target, name);
    } else if (name instanceof String) {
        return super.getProperty(context, target, name);
    }
    ReflectionContextState.updateCurrentPropertyPath(context, name);
    Class lastClass &amp;#x3D; (Class) context.get(XWorkConverter.LAST_BEAN_CLASS_ACCESSED);
    String lastProperty &amp;#x3D; (String) context.get(XWorkConverter.LAST_BEAN_PROPERTY_ACCESSED);
    
    if (name instanceof Number
            &amp;amp;&amp;amp; ReflectionContextState.isCreatingNullObjects(context)
            &amp;amp;&amp;amp; objectTypeDeterminer.shouldCreateIfNew(lastClass,lastProperty,target,null,true)) {

        List list &amp;#x3D; (List) target;
        int index &amp;#x3D; ((Number) name).intValue();
        int listSize &amp;#x3D; list.size();

        if (lastClass &amp;#x3D;&amp;#x3D; null || lastProperty &amp;#x3D;&amp;#x3D; null) {
            return super.getProperty(context, target, name);
        }
        Class beanClass &amp;#x3D; objectTypeDeterminer.getElementClass(lastClass, lastProperty, name);
        if (listSize &amp;lt;&amp;#x3D; index) {
            Object result;
            if (index &amp;gt; autoGrowCollectionLimit) {
                throw new OgnlException(&amp;quot;Error auto growing collection size to &amp;quot; + index + &amp;quot; which limited to &amp;quot;
                                        + autoGrowCollectionLimit);
            }
            for (int i &amp;#x3D; listSize; i &amp;lt; index; i++) {
                list.add(null);
            }
            try {
                list.add(index, result &amp;#x3D; objectFactory.buildBean(beanClass, context));
            } catch (Exception exc) {
                throw new XWorkException(exc);
            }
            return result;
        } else if (list.get(index) &amp;#x3D;&amp;#x3D; null) {
            Object result;
            try {
                list.set(index, result &amp;#x3D; objectFactory.buildBean(beanClass, context));
            } catch (Exception exc) {
                throw new XWorkException(exc);
            }
            return result;
        }
    }
    return super.getProperty(context, target, name);
}&lt;/code&gt;&lt;/pre&gt;
&lt;img loading=&#34;lazy&#34; data-src=&#34;/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/Snipaste_2024-04-22_22-28-18.png&#34; class=&#34;&#34; title=&#34;struts.ognl.autoGrowthCollectionLimit&#34;&gt;
&lt;p&gt;早知道就一起检索 255 了，还看了这么多提交记录，这次直接到 struts 的配置里面加上，测试了一下，果然可以&lt;/p&gt;
&lt;h4 id=&#34;吐槽&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#吐槽&#34;&gt;#&lt;/a&gt; 吐槽&lt;/h4&gt;
&lt;p&gt;struts 真的可以，增加了 default 配置，也不写到版本更新里面去，还得自己来看源码才能知道&lt;/p&gt;
&lt;h4 id=&#34;推想&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#推想&#34;&gt;#&lt;/a&gt; 推想&lt;/h4&gt;
&lt;p&gt;struts.ognl.expressionMaxLength 这个配置，看了一下他们的 issue, 还是感觉挺好笑的，2.5.21 加上后，2.5.22 又给注释掉，实际外发的版本 2.5.21 都没了，&lt;br&gt;
&lt;a href=&#34;https://github.com/apache/struts/pull/380&#34;&gt;struts.ognl.expressionMaxLength 讨论&lt;/a&gt;&lt;/p&gt;
&lt;img loading=&#34;lazy&#34; data-src=&#34;/2024/03/22/struts2%E9%9B%86%E5%90%88%E5%8F%82%E6%95%B0-%E5%8F%AA%E8%83%BD%E6%8E%A5%E6%94%B6256%E4%B8%AA/Snipaste_2024-04-22_22-44-21.png&#34; class=&#34;&#34; title=&#34;2.5.21缺失&#34;&gt; ]]></description>
        </item>
    </channel>
</rss>
